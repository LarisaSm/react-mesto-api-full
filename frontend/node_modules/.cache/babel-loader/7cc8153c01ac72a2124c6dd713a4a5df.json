{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Confirm from './Confirm';\nimport Api from '../utils/Api';\nimport Card from './Card';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport CurrentUserContext from '../contexts/CurrentUserContext'; // import api from '../utils/Api';\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacerPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n  const [isConfirmOpen, setConfirmOpen] = React.useState(false);\n  const [isConfirmAction, setIsConfirmAction] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState([]);\n  const [currentUser, setСurrentUser] = React.useState([]);\n  const [inputAboutValue, setInputAboutValue] = React.useState([]);\n  const [inputNameValue, setInputNameValue] = React.useState([]);\n  const [inputCardName, setInputCardName] = React.useState([]);\n  const [inputCardLink, setInputCardLink] = React.useState([]);\n  React.useEffect(() => {\n    Api.getUserInfo().then(res => {\n      setСurrentUser(res);\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n\n  function closeAllPopups() {\n    setEditProfilePopupState(false);\n    setEditAvatarPopupState(false);\n    setAddPlacerPopupState(false);\n    setImagePopupState(false);\n    setSelectedCard([]);\n  }\n\n  function handleCardClick({\n    src,\n    nameImg\n  }) {\n    setSelectedCard({\n      src,\n      nameImg\n    });\n    setImagePopupState(true);\n  }\n\n  function handleConfirmClick() {\n    setConfirmOpen(true);\n  }\n\n  function handleEditProfileClick(evt) {\n    evt.preventDefault();\n    setInputAboutValue(currentUser.about);\n    setInputNameValue(currentUser.name);\n    setEditProfilePopupState(true);\n  }\n\n  function handleEditAvatarClick(e) {\n    e.preventDefault();\n    setEditAvatarPopupState(true);\n  }\n\n  function handleAddPlaceClick(evt) {\n    evt.preventDefault();\n    setAddPlacerPopupState(true);\n  }\n\n  function handleNameChange(evt) {\n    setInputNameValue(evt.target.value);\n  }\n\n  function handleAboutChange(evt) {\n    setInputAboutValue(evt.target.value);\n  }\n\n  function handleCardName(evt) {\n    setInputCardName(evt.target.value);\n  }\n\n  function handleCardLink(evt) {\n    setInputCardLink(evt.target.value);\n  }\n\n  function handleConfirmAction(evt) {\n    console.log(\"confirmActionconfirmActionconfirmActionconfirmActionconfirmAction\");\n    setIsConfirmAction(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: e => handleEditProfileClick(e),\n        onEditAvatar: e => handleEditAvatarClick(e),\n        onAddPlace: e => handleAddPlaceClick(e),\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n        formId: \"edit-user\",\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        setConfirmOpen: handleConfirmClick,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name-input\",\n            type: \"text\",\n            className: \"popup__input popup__input_type_name\",\n            autoComplete: \"off\",\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            minLength: \"2\",\n            maxLength: \"40\",\n            value: inputNameValue,\n            onChange: e => handleNameChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"name-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"about-input\",\n            type: \"text\",\n            className: \"popup__input popup__input_type_about\",\n            autoComplete: \"off\",\n            placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n            name: \"about\",\n            value: inputAboutValue,\n            minLength: \"2\",\n            maxLength: \"200\",\n            required: true,\n            onChange: handleAboutChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"about-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n        formId: \"edit-user-avatar\",\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        setConfirmOpen: handleConfirmClick,\n        Confirm: isConfirmAction,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"avatar-input\",\n            type: \"url\",\n            className: \"popup__input popup__input_type_name\",\n            autoComplete: \"off\",\n            placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n            name: \"name\",\n            minLength: \"2\",\n            maxLength: \"200\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"avatar-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        button: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        formId: \"add-card\",\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        setConfirmOpen: handleConfirmClick,\n        isConfirm: isConfirmAction,\n        confirmAction: () => {\n          console.log(\"ERT\");\n          api.addNewCard(inputCardName, inputCardLink).then(res => {\n            console.log(res);\n            return /*#__PURE__*/_jsxDEV(Card, {\n              src: res.src,\n              nameImg: res.nameImg,\n              like: res.like,\n              cardId: res._Id,\n              onCardClick: onCardClick,\n              onCardLike: handleCardLike\n            }, res._Id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 22\n            }, this);\n          }).catch(err => {\n            console.log(err); // выведем ошибку в консоль\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name-input\",\n            type: \"text\",\n            className: \"popup__input popup__input_type_name\",\n            autoComplete: \"off\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            name: \"name\",\n            value: inputCardName,\n            onChange: e => handleCardName(e),\n            minLength: \"2\",\n            maxLength: \"30\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"name-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"url-input\",\n            type: \"url\",\n            className: \"popup__input popup__input_type_about\",\n            autoComplete: \"off\",\n            placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n            value: inputCardLink,\n            onChange: e => handleCardLink(e),\n            name: \"link\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"url-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        isOpen: isConfirmOpen,\n        setIsOpen: setConfirmOpen,\n        confirmAction: handleConfirmAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MzIRj1nbb0Vfg5K2nt+fB8hCQGs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/App.js"],"names":["React","PopupWithForm","ImagePopup","Confirm","Api","Card","Header","Footer","Main","CurrentUserContext","App","isEditProfilePopupOpen","setEditProfilePopupState","useState","isEditAvatarPopupOpen","setEditAvatarPopupState","isAddPlacePopupOpen","setAddPlacerPopupState","isImagePopupOpen","setImagePopupState","isConfirmOpen","setConfirmOpen","isConfirmAction","setIsConfirmAction","selectedCard","setSelectedCard","currentUser","setСurrentUser","inputAboutValue","setInputAboutValue","inputNameValue","setInputNameValue","inputCardName","setInputCardName","inputCardLink","setInputCardLink","useEffect","getUserInfo","then","res","catch","err","console","log","closeAllPopups","handleCardClick","src","nameImg","handleConfirmClick","handleEditProfileClick","evt","preventDefault","about","name","handleEditAvatarClick","e","handleAddPlaceClick","handleNameChange","target","value","handleAboutChange","handleCardName","handleCardLink","handleConfirmAction","api","addNewCard","like","_Id","onCardClick","handleCardLike"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Confirm from './Confirm';\nimport Api from '../utils/Api';\nimport Card from './Card';\n\n\nimport Header from './Header'\nimport Footer from './Footer'\nimport Main from './Main'\n\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n// import api from '../utils/Api';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacerPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n  const [isConfirmOpen, setConfirmOpen] = React.useState(false);\n  const [isConfirmAction, setIsConfirmAction] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState([]);\n\n  const [currentUser, setСurrentUser] = React.useState([]); \n\n  const [inputAboutValue, setInputAboutValue] = React.useState([]);\n  const [inputNameValue, setInputNameValue] = React.useState([]);\n\n  const [inputCardName, setInputCardName] = React.useState([]);\n  const [inputCardLink, setInputCardLink] = React.useState([]);\n\n\n\n\n  React.useEffect(() => {\n    Api.getUserInfo().then((res) => {\n      setСurrentUser(res);\n    })\n    .catch((err) => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n\n  function closeAllPopups() {\n    setEditProfilePopupState(false);\n    setEditAvatarPopupState(false);\n    setAddPlacerPopupState(false);\n    setImagePopupState(false);\n    setSelectedCard([]);\n  }\n\n  function handleCardClick({src, nameImg}) {\n    setSelectedCard({src, nameImg});\n    setImagePopupState(true);\n  }\n\n  function handleConfirmClick() {\n    setConfirmOpen(true);\n  }\n\n  function handleEditProfileClick (evt) {\n    evt.preventDefault();\n    setInputAboutValue(currentUser.about);\n    setInputNameValue(currentUser.name);\n    setEditProfilePopupState(true);\n  }\n\n  function handleEditAvatarClick (e) {\n    e.preventDefault();\n    setEditAvatarPopupState(true);\n  }\n  \n  function handleAddPlaceClick (evt) {\n    evt.preventDefault();\n    setAddPlacerPopupState(true);\n  }\n\n  function handleNameChange (evt) {\n   setInputNameValue(evt.target.value);\n  }\n\n  function handleAboutChange (evt) {\n   setInputAboutValue(evt.target.value);\n  }\n\n  function handleCardName (evt) {\n    setInputCardName(evt.target.value);\n   }\n\n   function handleCardLink (evt) {\n    setInputCardLink(evt.target.value);\n   }\n\n  function handleConfirmAction (evt) {\n    console.log(\"confirmActionconfirmActionconfirmActionconfirmActionconfirmAction\");\n    setIsConfirmAction(true);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"App\">\n      <Header />\n      <Main \n        onEditProfile = {(e) => handleEditProfileClick(e)} \n        onEditAvatar = {(e) => handleEditAvatarClick(e)}\n        onAddPlace = {(e) => handleAddPlaceClick(e)}\n        onCardClick = {handleCardClick}\n        />\n      <Footer />\n      <PopupWithForm \n        button=\"Сохранить\" \n        title=\"Редактировать профиль\" \n        formId=\"edit-user\" \n        isOpen={isEditProfilePopupOpen} \n        onClose={closeAllPopups}\n        setConfirmOpen={handleConfirmClick}\n        \n        children={<>\n          <input\n            id=\"name-input\"\n            type=\"text\"\n            className=\"popup__input popup__input_type_name\"\n            autoComplete=\"off\"\n            placeholder=\"Имя\"\n            name=\"name\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            value={inputNameValue}\n            onChange={(e) => handleNameChange(e)}\n            required\n          />\n          <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n          <input\n            id=\"about-input\"\n            type=\"text\"\n            className=\"popup__input popup__input_type_about\"\n            autoComplete=\"off\"\n            placeholder=\"О себе\"\n            name=\"about\"\n            value={inputAboutValue}\n            minLength=\"2\"\n            maxLength=\"200\"\n            required\n            onChange={handleAboutChange}\n          />\n          <span id=\"about-input-error\" className=\"popup__input-error\"></span>\n          </>}\n      />\n      <PopupWithForm \n        button=\"Сохранить\" \n        title=\"Обновить аватар\" \n        formId=\"edit-user-avatar\" \n        isOpen={isEditAvatarPopupOpen} \n        onClose={closeAllPopups}\n        setConfirmOpen={handleConfirmClick}\n        Confirm={isConfirmAction}\n      children={<>\n        <input\n        id=\"avatar-input\"\n        type=\"url\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Ссылка на аватар\"\n        name=\"name\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n        />\n        <span id=\"avatar-input-error\" className=\"popup__input-error\"></span>\n      </>}/>\n      <PopupWithForm \n        button=\"Создать\" \n        title=\"Новое место\" \n        formId=\"add-card\" \n        isOpen={isAddPlacePopupOpen} \n        onClose={closeAllPopups} \n        setConfirmOpen={handleConfirmClick}\n        isConfirm={isConfirmAction}\n        confirmAction={ () => {\n          console.log(\"ERT\")\n          api.addNewCard(inputCardName, inputCardLink)\n            .then((res) => {\n              console.log(res)\n              return <Card key={res._Id} src={res.src} nameImg={res.nameImg} like={res.like} cardId={res._Id} onCardClick={onCardClick} onCardLike={handleCardLike}/>\n            })\n            .catch((err) => {\n              console.log(err); // выведем ошибку в консоль\n          });\n\n        }\n          \n        }\n        children={<>\n          <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Название\"\n        name=\"name\"\n        value={inputCardName}\n        onChange={(e) => handleCardName(e)}\n        minLength=\"2\"\n        maxLength=\"30\"\n        required\n      />\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input\n        id=\"url-input\"\n        type=\"url\"\n        className=\"popup__input popup__input_type_about\"\n        autoComplete=\"off\"\n        placeholder=\"Ссылка на картинку\"\n        value={inputCardLink}\n        onChange={(e) => handleCardLink(e)}\n        name=\"link\"\n        required\n      />\n      <span id=\"url-input-error\" className=\"popup__input-error\"></span>\n        </>}/>\n\n      <Confirm isOpen={isConfirmOpen} setIsOpen={setConfirmOpen} confirmAction={handleConfirmAction}/>\n      <ImagePopup \n        card={selectedCard} \n        isOpen={isImagePopupOpen}   \n        onClose={closeAllPopups}/>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}