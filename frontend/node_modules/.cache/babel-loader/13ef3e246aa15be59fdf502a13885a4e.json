{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import PopupWithForm from'./PopupWithForm';function AddPlacePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,setConfirmOpen=_ref.setConfirmOpen,setConfirmAction=_ref.setConfirmAction,setConfirmObj=_ref.setConfirmObj;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),inputCardName=_React$useState2[0],setInputCardName=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),inputCardLink=_React$useState4[0],setInputCardLink=_React$useState4[1];function handleCardName(evt){setInputCardName(evt.target.value);}function handleCardLink(evt){setInputCardLink(evt.target.value);}function addNewCard(name,link){setConfirmAction('addNewCard');setConfirmObj({name:name,link:link});}return/*#__PURE__*/_jsx(PopupWithForm,{button:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",title:\"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",formId:\"add-card\",isOpen:isOpen,onClose:onClose,setConfirmOpen:setConfirmOpen,confirmAction:function confirmAction(){return addNewCard(inputCardName,inputCardLink);},setConfirmAction:setConfirmAction,children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{id:\"name-input\",type:\"text\",className:\"popup__input popup__input_type_name\",autoComplete:\"off\",placeholder:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",name:\"name\",value:inputCardName,onChange:function onChange(e){return handleCardName(e);},minLength:\"2\",maxLength:\"30\",required:true}),/*#__PURE__*/_jsx(\"span\",{id:\"name-input-error\",className:\"popup__input-error\"}),/*#__PURE__*/_jsx(\"input\",{id:\"url-input\",type:\"url\",className:\"popup__input popup__input_type_about\",autoComplete:\"off\",placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",value:inputCardLink,onChange:function onChange(e){return handleCardLink(e);},name:\"link\",required:true}),/*#__PURE__*/_jsx(\"span\",{id:\"url-input-error\",className:\"popup__input-error\"})]})});}export default AddPlacePopup;","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","AddPlacePopup","isOpen","onClose","setConfirmOpen","setConfirmAction","setConfirmObj","useState","inputCardName","setInputCardName","inputCardLink","setInputCardLink","handleCardName","evt","target","value","handleCardLink","addNewCard","name","link","e"],"mappings":"icAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,QAASC,CAAAA,aAAT,MAA2F,IAAlEC,CAAAA,MAAkE,MAAlEA,MAAkE,CAA1DC,OAA0D,MAA1DA,OAA0D,CAAjDC,cAAiD,MAAjDA,cAAiD,CAAjCC,gBAAiC,MAAjCA,gBAAiC,CAAfC,aAAe,MAAfA,aAAe,qBAE/CP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAF+C,oDAElFC,aAFkF,qBAEnEC,gBAFmE,0CAG/CV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAH+C,qDAGlFG,aAHkF,qBAGnEC,gBAHmE,qBAKzF,QAASC,CAAAA,cAAT,CAAyBC,GAAzB,CAA8B,CAC5BJ,gBAAgB,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAhB,CACA,CAED,QAASC,CAAAA,cAAT,CAAyBH,GAAzB,CAA8B,CAC7BF,gBAAgB,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAhB,CACA,CAED,QAASE,CAAAA,UAAT,CAAqBC,IAArB,CAA2BC,IAA3B,CAAiC,CAChCd,gBAAgB,CAAC,YAAD,CAAhB,CACAC,aAAa,CAAC,CACZY,IAAI,CAAEA,IADM,CAEZC,IAAI,CAAEA,IAFM,CAAD,CAAb,CAIA,CAEJ,mBACA,KAAC,aAAD,EACQ,MAAM,CAAC,4CADf,CAEQ,KAAK,CAAC,+DAFd,CAGQ,MAAM,CAAC,UAHf,CAIQ,MAAM,CAAEjB,MAJhB,CAKQ,OAAO,CAAEC,OALjB,CAMQ,cAAc,CAAEC,cANxB,CAOQ,aAAa,CAAE,+BAAMa,CAAAA,UAAU,CAACT,aAAD,CAAgBE,aAAhB,CAAhB,EAPvB,CAQQ,gBAAgB,CAAEL,gBAR1B,CAUQ,QAAQ,cAAE,wCACR,cACF,EAAE,CAAC,YADD,CAEF,IAAI,CAAC,MAFH,CAGF,SAAS,CAAC,qCAHR,CAIF,YAAY,CAAC,KAJX,CAKF,WAAW,CAAC,kDALV,CAMF,IAAI,CAAC,MANH,CAOF,KAAK,CAAEG,aAPL,CAQF,QAAQ,CAAE,kBAACY,CAAD,QAAOR,CAAAA,cAAc,CAACQ,CAAD,CAArB,EARR,CASF,SAAS,CAAC,GATR,CAUF,SAAS,CAAC,IAVR,CAWF,QAAQ,KAXN,EADQ,cAcZ,aAAM,EAAE,CAAC,kBAAT,CAA4B,SAAS,CAAC,oBAAtC,EAdY,cAeZ,cACE,EAAE,CAAC,WADL,CAEE,IAAI,CAAC,KAFP,CAGE,SAAS,CAAC,sCAHZ,CAIE,YAAY,CAAC,KAJf,CAKE,WAAW,CAAC,oGALd,CAME,KAAK,CAAEV,aANT,CAOE,QAAQ,CAAE,kBAACU,CAAD,QAAOJ,CAAAA,cAAc,CAACI,CAAD,CAArB,EAPZ,CAQE,IAAI,CAAC,MARP,CASE,QAAQ,KATV,EAfY,cA0BZ,aAAM,EAAE,CAAC,iBAAT,CAA2B,SAAS,CAAC,oBAArC,EA1BY,GAVlB,EADA,CAwCC,CAED,cAAenB,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup ({isOpen, onClose, setConfirmOpen, setConfirmAction, setConfirmObj}){\n\n  const [inputCardName, setInputCardName] = React.useState([]);\n  const [inputCardLink, setInputCardLink] = React.useState([]);\n\n  function handleCardName (evt) {\n    setInputCardName(evt.target.value);\n   }\n\n   function handleCardLink (evt) {\n    setInputCardLink(evt.target.value);\n   }\n\n   function addNewCard (name, link) {\n    setConfirmAction('addNewCard');\n    setConfirmObj({\n      name: name,\n      link: link\n    })\n   }\n\nreturn (\n<PopupWithForm \n        button=\"Создать\" \n        title=\"Новое место\" \n        formId=\"add-card\" \n        isOpen={isOpen} \n        onClose={onClose} \n        setConfirmOpen={setConfirmOpen}\n        confirmAction={() => addNewCard(inputCardName, inputCardLink)}\n        setConfirmAction={setConfirmAction}\n\n        children={<>\n          <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Название\"\n        name=\"name\"\n        value={inputCardName}\n        onChange={(e) => handleCardName(e)}\n        minLength=\"2\"\n        maxLength=\"30\"\n        required\n      />\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input\n        id=\"url-input\"\n        type=\"url\"\n        className=\"popup__input popup__input_type_about\"\n        autoComplete=\"off\"\n        placeholder=\"Ссылка на картинку\"\n        value={inputCardLink}\n        onChange={(e) => handleCardLink(e)}\n        name=\"link\"\n        required\n      />\n      <span id=\"url-input-error\" className=\"popup__input-error\"></span>\n        </>}/>)\n\n}\n\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}