{"ast":null,"code":"// Auth.js\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => res.json()).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)).catch(err => console.log(err));\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"jwt\", data.token);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react-auth/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","json","response","status","e","ok","Promise","reject","catch","err","console","log","authorize","data","token","localStorage","setItem","getContent","Authorization"],"mappings":"AAAA;AAEA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAL2B,GAAvB,CAAL,CAUJO,IAVI,CAUEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVV,EAWJF,IAXI,CAWEG,QAAD,IAAc;AAClB,QAAI;AACF,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACD,IAAT,EAAP;AACD;AACF,KAJD,CAIE,OAAOG,CAAP,EAAU;AACV,aAAOA,CAAP;AACD;AACF,GAnBI,EAoBJL,IApBI,CAoBEC,GAAD,IACJA,GAAG,CAACK,EAAJ,GAASL,GAAG,CAACC,IAAJ,EAAT,GAAsBK,OAAO,CAACC,MAAR,CAAgB,WAAUP,GAAG,CAACG,MAAO,EAArC,CArBnB,EAuBJK,KAvBI,CAuBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAvBX,CAAP;AAwBD,CAzBM;AA2BP,OAAO,MAAMG,SAAS,GAAG,CAACrB,QAAD,EAAWC,KAAX,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAL2B,GAAvB,CAAL,CAUJO,IAVI,CAUEG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EAVf,EAWJF,IAXI,CAWEc,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,KAAjC;AACA,aAAOD,IAAP;AACD;AACF,GAhBI,EAiBJL,KAjBI,CAiBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMQ,UAAU,GAAIH,KAAD,IAAW;AACnC,SAAOrB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPuB,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAFxB;AAF0B,GAAzB,CAAL,CAOJf,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQJF,IARI,CAQEc,IAAD,IAAUA,IARX,CAAP;AASD,CAVM","sourcesContent":["// Auth.js\n\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  })\n    .then((res) => res.json())\n    .then((response) => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    })\n    .then((res) =>\n      res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => data);\n};\n"]},"metadata":{},"sourceType":"module"}