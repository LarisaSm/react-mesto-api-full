{"ast":null,"code":"// import React from \"react\";\n// import CurrentUserContext from \"../contexts/CurrentUserContext\";\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getInitialCards(headers) {\n    console.log(headers);\n    return fetch(this._url + 'cards', {\n      headers: headers\n    }).then(res => this._returnData(res));\n  }\n\n  addNewCard(name, link, headers) {\n    return fetch(this._url + 'cards', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._returnData(res));\n  }\n\n  editUserInfo(name, about, headers) {\n    return fetch(this._url + 'users/me', {\n      method: 'PATCH',\n      headers: headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._returnData(res));\n  }\n\n  getUserInfo(headers) {\n    console.log(headers);\n    return fetch(this._url + 'users/me', {\n      headers: headers\n    }).then(res => this._returnData(res));\n  }\n\n  deleteCard(id, headers) {\n    return fetch(this._url + `cards/${id}`, {\n      method: \"DELETE\",\n      headers: headers\n    }).then(res => this._returnData(res));\n  }\n\n  likeCard(id, headers) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: headers\n    }).then(res => this._returnData(res));\n  }\n\n  deleteLikeCard(id, headers) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: headers\n    }).then(res => this._returnData(res));\n  }\n\n  getLikesCard(id, headers) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"GET\",\n      headers: headers\n    }).then(res => this._returnData(res));\n  }\n\n  setUserAvatar(avatar, headers) {\n    return fetch(this._url + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => this._returnData(res));\n  }\n\n  _returnData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n} // const api = new Api({\n//   url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n//   headers: {\n// \t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n//     \"content-type\": \"application/json\",\n//   }\n// }); \n\n\nconst api = new Api({\n  url: \"http://localhost:3005/\",\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-all/frontend/src/utils/api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","getInitialCards","console","log","fetch","then","res","_returnData","addNewCard","name","link","method","body","JSON","stringify","editUserInfo","about","getUserInfo","deleteCard","id","likeCard","deleteLikeCard","getLikesCard","setUserAvatar","avatar","ok","json","Promise","reject","status","api"],"mappings":"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","sourcesContent":["// import React from \"react\";\n\n// import CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nclass Api {\n  constructor (config) {\n      this._url = config.url;\n      this._headers = config.headers;\n  }\n\n  getInitialCards(headers) {\n    console.log(headers);\n    return fetch(this._url + 'cards', {\n      headers: headers,\n  })\n      .then(res => this._returnData(res));\n  } \n\n  addNewCard (name, link, headers) {\n    return fetch(this._url + 'cards', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        name: name,\n        link: link \n      })\n    })\n    .then((res) => this._returnData(res));\n}\n\n  editUserInfo (name, about, headers) {\n    return fetch(this._url + 'users/me', {\n    method: 'PATCH',\n    headers: headers,\n    body: JSON.stringify({\n      name: name,\n      about: about \n    })\n  })\n  .then((res) => this._returnData(res));\n}\n  \n  getUserInfo (headers) {\n    console.log(headers);\n    return fetch(this._url + 'users/me', {\n        headers: headers\n      })\n      .then((res) => this._returnData(res));\n    }\n\n\n  deleteCard(id, headers) {\n      return fetch(this._url + `cards/${id}`, {\n          method: \"DELETE\",\n          headers: headers,\n      }).then((res) => this._returnData(res))\n  }\n\n\n  likeCard(id,headers) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: headers,\n  }).then((res) => this._returnData(res))\n  }\n\n  deleteLikeCard(id, headers) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: headers,\n  }).then((res) => this._returnData(res))\n  }\n\n  getLikesCard(id, headers) {\n    return fetch(this._url + `cards/likes/${id}`, {\n      method: \"GET\",\n      headers: headers,\n  }).then((res) => this._returnData(res))\n  }\n\n  setUserAvatar(avatar, headers) {\n    return fetch(this._url + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: headers,\n      body: JSON.stringify({\n        avatar: avatar \n      })\n    })\n    .then((res) => this._returnData(res));\n  }\n\n_returnData (res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n}\n\n// const api = new Api({\n//   url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n//   headers: {\n// \t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n//     \"content-type\": \"application/json\",\n//   }\n// }); \n\nconst api = new Api({\n  url: \"http://localhost:3005/\",\n  headers: {\n        \"content-type\": \"application/json\"\n      }\n}); \n\nexport default api;"]},"metadata":{},"sourceType":"module"}