{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import PopupWithForm from'./PopupWithForm';import CurrentUserContext from'../contexts/CurrentUserContext';function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,setConfirmOpen=_ref.setConfirmOpen,setConfirmAction=_ref.setConfirmAction,setConfirmObj=_ref.setConfirmObj;var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),inputAboutValue=_React$useState2[0],setInputAboutValue=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),inputNameValue=_React$useState4[0],setInputNameValue=_React$useState4[1];// Подписка на контекст\nvar currentUser=React.useContext(CurrentUserContext);function handleNameChange(evt){setInputNameValue(evt.target.value);}function handleAboutChange(evt){setInputAboutValue(evt.target.value);}function editUserInfo(name,about){setConfirmAction('editUserInfo');setConfirmObj({name:name,about:about});}// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setInputAboutValue(currentUser.about);setInputNameValue(currentUser.name);},[currentUser]);return/*#__PURE__*/_jsx(PopupWithForm,{button:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",formId:\"edit-user\",isOpen:isOpen,onClose:onClose,setConfirmOpen:setConfirmOpen,confirmAction:function confirmAction(){return editUserInfo(inputNameValue,inputAboutValue);},setConfirmAction:setConfirmAction,children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{id:\"name-input\",type:\"text\",className:\"popup__input popup__input_type_name\",autoComplete:\"off\",placeholder:\"\\u0418\\u043C\\u044F\",name:\"name\",minLength:\"2\",maxLength:\"40\",value:inputNameValue,onChange:function onChange(e){return handleNameChange(e);},required:true}),/*#__PURE__*/_jsx(\"span\",{id:\"name-input-error\",className:\"popup__input-error\"}),/*#__PURE__*/_jsx(\"input\",{id:\"about-input\",type:\"text\",className:\"popup__input popup__input_type_about\",autoComplete:\"off\",placeholder:\"\\u041E \\u0441\\u0435\\u0431\\u0435\",name:\"about\",value:inputAboutValue,minLength:\"2\",maxLength:\"200\",required:true,onChange:handleAboutChange}),/*#__PURE__*/_jsx(\"span\",{id:\"about-input-error\",className:\"popup__input-error\"})]})});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","setConfirmOpen","setConfirmAction","setConfirmObj","useState","inputAboutValue","setInputAboutValue","inputNameValue","setInputNameValue","currentUser","useContext","handleNameChange","evt","target","value","handleAboutChange","editUserInfo","name","about","useEffect","e"],"mappings":"icACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CAEA,QAASC,CAAAA,gBAAT,MAA8F,IAAlEC,CAAAA,MAAkE,MAAlEA,MAAkE,CAA1DC,OAA0D,MAA1DA,OAA0D,CAAjDC,cAAiD,MAAjDA,cAAiD,CAAjCC,gBAAiC,MAAjCA,gBAAiC,CAAfC,aAAe,MAAfA,aAAe,qBAE9CR,KAAK,CAACS,QAAN,CAAe,EAAf,CAF8C,oDAErFC,eAFqF,qBAEpEC,kBAFoE,0CAGhDX,KAAK,CAACS,QAAN,CAAe,EAAf,CAHgD,qDAGrFG,cAHqF,qBAGrEC,iBAHqE,qBAIzF;AACH,GAAMC,CAAAA,WAAW,CAAGd,KAAK,CAACe,UAAN,CAAiBb,kBAAjB,CAApB,CAEA,QAASc,CAAAA,gBAAT,CAA2BC,GAA3B,CAAgC,CAC9BJ,iBAAiB,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAjB,CACA,CAED,QAASC,CAAAA,iBAAT,CAA4BH,GAA5B,CAAiC,CAChCN,kBAAkB,CAACM,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAlB,CACA,CAED,QAASE,CAAAA,YAAT,CAAsBC,IAAtB,CAA4BC,KAA5B,CAAmC,CAClChB,gBAAgB,CAAC,cAAD,CAAhB,CACAC,aAAa,CAAC,CACZc,IAAI,CAAEA,IADM,CAEZC,KAAK,CAAEA,KAFK,CAAD,CAAb,CAIA,CAEJ;AACA;AACEvB,KAAK,CAACwB,SAAN,CAAgB,UAAM,CACpBb,kBAAkB,CAACG,WAAW,CAACS,KAAb,CAAlB,CACAV,iBAAiB,CAACC,WAAW,CAACQ,IAAb,CAAjB,CACD,CAHD,CAGG,CAACR,WAAD,CAHH,EAKF,mBACA,KAAC,aAAD,EACQ,MAAM,CAAC,wDADf,CAEQ,KAAK,CAAC,2HAFd,CAGQ,MAAM,CAAC,WAHf,CAIQ,MAAM,CAAEV,MAJhB,CAKQ,OAAO,CAAEC,OALjB,CAMQ,cAAc,CAAEC,cANxB,CAOQ,aAAa,CAAE,+BAAMe,CAAAA,YAAY,CAACT,cAAD,CAAiBF,eAAjB,CAAlB,EAPvB,CAQQ,gBAAgB,CAAEH,gBAR1B,CASQ,QAAQ,cAAE,wCACR,cACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,qCAHZ,CAIE,YAAY,CAAC,KAJf,CAKE,WAAW,CAAC,oBALd,CAME,IAAI,CAAC,MANP,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,IARZ,CASE,KAAK,CAAEK,cATT,CAUE,QAAQ,CAAE,kBAACa,CAAD,QAAOT,CAAAA,gBAAgB,CAACS,CAAD,CAAvB,EAVZ,CAWE,QAAQ,KAXV,EADQ,cAcR,aAAM,EAAE,CAAC,kBAAT,CAA4B,SAAS,CAAC,oBAAtC,EAdQ,cAeR,cACE,EAAE,CAAC,aADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,sCAHZ,CAIE,YAAY,CAAC,KAJf,CAKE,WAAW,CAAC,iCALd,CAME,IAAI,CAAC,OANP,CAOE,KAAK,CAAEf,eAPT,CAQE,SAAS,CAAC,GARZ,CASE,SAAS,CAAC,KATZ,CAUE,QAAQ,KAVV,CAWE,QAAQ,CAAEU,iBAXZ,EAfQ,cA4BR,aAAM,EAAE,CAAC,mBAAT,CAA6B,SAAS,CAAC,oBAAvC,EA5BQ,GATlB,EADA,CAyCC,CAED,cAAejB,CAAAA,gBAAf","sourcesContent":["\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup ({isOpen, onClose, setConfirmOpen, setConfirmAction, setConfirmObj}){\n\n  const [inputAboutValue, setInputAboutValue] = React.useState('');\n  const [inputNameValue, setInputNameValue] = React.useState('');\n     // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleNameChange (evt) {\n    setInputNameValue(evt.target.value);\n   }\n \n   function handleAboutChange (evt) {\n    setInputAboutValue(evt.target.value);\n   }\n \n   function editUserInfo(name, about) {\n    setConfirmAction('editUserInfo');\n    setConfirmObj({\n      name: name,\n      about: about \n    })\n   }\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setInputAboutValue(currentUser.about);\n    setInputNameValue(currentUser.name);\n  }, [currentUser]); \n\nreturn (\n<PopupWithForm \n        button=\"Сохранить\" \n        title=\"Редактировать профиль\" \n        formId=\"edit-user\" \n        isOpen={isOpen} \n        onClose={onClose}\n        setConfirmOpen={setConfirmOpen}\n        confirmAction={() => editUserInfo(inputNameValue, inputAboutValue)}\n        setConfirmAction={setConfirmAction}\n        children={<>\n          <input\n            id=\"name-input\"\n            type=\"text\"\n            className=\"popup__input popup__input_type_name\"\n            autoComplete=\"off\"\n            placeholder=\"Имя\"\n            name=\"name\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            value={inputNameValue}\n            onChange={(e) => handleNameChange(e)}\n            required\n          />\n          <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n          <input\n            id=\"about-input\"\n            type=\"text\"\n            className=\"popup__input popup__input_type_about\"\n            autoComplete=\"off\"\n            placeholder=\"О себе\"\n            name=\"about\"\n            value={inputAboutValue}\n            minLength=\"2\"\n            maxLength=\"200\"\n            required\n            onChange={handleAboutChange}\n          />\n          <span id=\"about-input-error\" className=\"popup__input-error\"></span>\n          </>}\n      />)\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}