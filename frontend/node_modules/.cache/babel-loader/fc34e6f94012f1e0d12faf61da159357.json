{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js\";\nimport React from \"react\";\nimport img_ok from \"../images/infoToolTip_ok.png\";\nimport img_no from \"../images/infoToolTip_no.png\";\n\nfunction InfoTooltip({\n  isOpen,\n  onClose\n}) {\n  const text_ok = \"Вы успешно зарегистрировались!\";\n  const text_no = \"Что-то пошло не так! Попробуйте ещё раз.\";\n  const isConfirmAuth = true; // const closeByOverlay = useCallback(\n  //   (evt) => {\n  //     if (evt.target !== evt.currentTarget) return;\n  //     onClose();\n  //   },\n  //   [onClose]\n  // );\n  // const handleEscClose = useCallback(\n  //   (evt) => {\n  //     if (evt.key === \"Escape\") {\n  //       onClose();\n  //     }\n  //   },\n  //   [onClose]\n  // );\n  // React.useEffect(() => {\n  //   if (isOpen) {\n  //     const Popup = document.querySelector(`.${formId}`);\n  //     document.body.addEventListener(\"keyup\", handleEscClose);\n  //     Popup.addEventListener(\"click\", closeByOverlay);\n  //   }\n  //   return () => {\n  //     const Popup = document.querySelector(`.${formId}`);\n  //     document.body.removeEventListener(\"keyup\", handleEscClose);\n  //     Popup.removeEventListener(\"click\", closeByOverlay);\n  //   };\n  // }, [isOpen, formId, closeByOverlay, handleEscClose]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `infoToolTip ${isOpen && \"infoToolTip_opened\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoToolTip__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"infoToolTip__img\",\n        src: isConfirmAuth ? img_ok : img_no,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"infoToolTip__text\",\n        children: isConfirmAuth ? text_ok : text_no\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"infoToolTip__close\",\n        type: \"button\",\n        onClick: function (evt) {\n          evt.preventDefault();\n          onClose();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js"],"names":["React","img_ok","img_no","InfoTooltip","isOpen","onClose","text_ok","text_no","isConfirmAuth","evt","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAArB,EAA0C;AACxC,QAAMC,OAAO,GAAG,gCAAhB;AACA,QAAMC,OAAO,GAAG,0CAAhB;AAEA,QAAMC,aAAa,GAAG,IAAtB,CAJwC,CAKxC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,eAAcJ,MAAM,IAAI,oBAAqB,EAA9D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,GAAG,EAAEI,aAAa,GAAGP,MAAH,GAAYC,MAFhC;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,kBACGM,aAAa,GAAGF,OAAH,GAAaC;AAD7B;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,UAAUE,GAAV,EAAe;AACtBA,UAAAA,GAAG,CAACC,cAAJ;AACAL,UAAAA,OAAO;AACR;AANH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;KAxDQF,W;AA0DT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport img_ok from \"../images/infoToolTip_ok.png\";\nimport img_no from \"../images/infoToolTip_no.png\";\n\nfunction InfoTooltip({ isOpen, onClose }) {\n  const text_ok = \"Вы успешно зарегистрировались!\";\n  const text_no = \"Что-то пошло не так! Попробуйте ещё раз.\";\n\n  const isConfirmAuth = true;\n  // const closeByOverlay = useCallback(\n  //   (evt) => {\n  //     if (evt.target !== evt.currentTarget) return;\n  //     onClose();\n  //   },\n  //   [onClose]\n  // );\n\n  // const handleEscClose = useCallback(\n  //   (evt) => {\n  //     if (evt.key === \"Escape\") {\n  //       onClose();\n  //     }\n  //   },\n  //   [onClose]\n  // );\n  // React.useEffect(() => {\n  //   if (isOpen) {\n  //     const Popup = document.querySelector(`.${formId}`);\n  //     document.body.addEventListener(\"keyup\", handleEscClose);\n  //     Popup.addEventListener(\"click\", closeByOverlay);\n  //   }\n  //   return () => {\n  //     const Popup = document.querySelector(`.${formId}`);\n  //     document.body.removeEventListener(\"keyup\", handleEscClose);\n  //     Popup.removeEventListener(\"click\", closeByOverlay);\n  //   };\n  // }, [isOpen, formId, closeByOverlay, handleEscClose]);\n\n  return (\n    <div className={`infoToolTip ${isOpen && \"infoToolTip_opened\"}`}>\n      <div className=\"infoToolTip__container\">\n        <img\n          className=\"infoToolTip__img\"\n          src={isConfirmAuth ? img_ok : img_no}\n          alt=\"\"\n        ></img>\n        <h2 className=\"infoToolTip__text\">\n          {isConfirmAuth ? text_ok : text_no}\n        </h2>\n        <button\n          className=\"infoToolTip__close\"\n          type=\"button\"\n          onClick={function (evt) {\n            evt.preventDefault();\n            onClose();\n          }}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}