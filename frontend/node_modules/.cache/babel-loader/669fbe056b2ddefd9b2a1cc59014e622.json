{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/components/Confirm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Api from \"../utils/api\";\nimport Spinner from \"./Spinner\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Confirm({\n  isOpen,\n  setIsOpen,\n  confirmAction,\n  confirmObj,\n  cards,\n  setCards,\n  isLoadingConfirm,\n  setIsLoadingConfirm\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function onClick() {\n    // console.log(\"confirm -> onClick\");\n    // console.log(confirmAction);\n    setIsLoadingConfirm(true);\n\n    switch (confirmAction) {\n      case \"cardDelete\":\n        const isOwn = confirmObj.ownerId === currentUser._id;\n\n        if (isOwn) {\n          Api.deleteCard(confirmObj.cardId).then(() => {\n            const newCards = cards.filter(c => c.cardId !== confirmObj.cardId);\n            setCards(newCards);\n          }).then(() => {\n            setIsOpen(false);\n          }).catch(err => {\n            console.log(err); // выведем ошибку в консоль\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    } // console.log(\"Confirm -> onCLick\");\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `confirm popup ${isOpen && \"popup_opened\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container confirm__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__header\",\n        children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__save\",\n        type: \"button\",\n        onClick: onClick,\n        children: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isLoadingConfirm ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\",\n        onClick: function (evt) {\n          evt.preventDefault();\n          setIsOpen(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Confirm, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Confirm;\nexport default Confirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirm\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/components/Confirm.js"],"names":["React","Api","Spinner","CurrentUserContext","Confirm","isOpen","setIsOpen","confirmAction","confirmObj","cards","setCards","isLoadingConfirm","setIsLoadingConfirm","currentUser","useContext","onClick","isOwn","ownerId","_id","deleteCard","cardId","then","newCards","filter","c","catch","err","console","log","evt","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,OAAT,CAAiB;AACfC,EAAAA,MADe;AAEfC,EAAAA,SAFe;AAGfC,EAAAA,aAHe;AAIfC,EAAAA,UAJe;AAKfC,EAAAA,KALe;AAMfC,EAAAA,QANe;AAOfC,EAAAA,gBAPe;AAQfC,EAAAA;AARe,CAAjB,EASG;AAAA;;AACD,QAAMC,WAAW,GAAGb,KAAK,CAACc,UAAN,CAAiBX,kBAAjB,CAApB;;AAEA,WAASY,OAAT,GAAmB;AACjB;AACA;AACAH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;;AACA,YAAQL,aAAR;AACE,WAAK,YAAL;AACE,cAAMS,KAAK,GAAGR,UAAU,CAACS,OAAX,KAAuBJ,WAAW,CAACK,GAAjD;;AACA,YAAIF,KAAJ,EAAW;AACTf,UAAAA,GAAG,CAACkB,UAAJ,CAAeX,UAAU,CAACY,MAA1B,EACGC,IADH,CACQ,MAAM;AACV,kBAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAN,CACdC,CAAD,IAAOA,CAAC,CAACJ,MAAF,KAAaZ,UAAU,CAACY,MADhB,CAAjB;AAGAV,YAAAA,QAAQ,CAACY,QAAD,CAAR;AACD,WANH,EAOGD,IAPH,CAOQ,MAAM;AACVf,YAAAA,SAAS,CAAC,KAAD,CAAT;AACD,WATH,EAUGmB,KAVH,CAUUC,GAAD,IAAS;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADc,CACI;AACnB,WAZH;AAaD;;AACD;;AACF;AACE;AApBJ,KAJiB,CA0BjB;;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAG,iBAAgBrB,MAAM,IAAI,cAAe,EAA1D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,OAAO,EAAEU,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAMGJ,gBAAgB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiB,EANpC,eAOE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,UAAUkB,GAAV,EAAe;AACtBA,UAAAA,GAAG,CAACC,cAAJ;AACAxB,UAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA7DQF,O;;KAAAA,O;AA+DT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport Api from \"../utils/api\";\nimport Spinner from \"./Spinner\";\n\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Confirm({\n  isOpen,\n  setIsOpen,\n  confirmAction,\n  confirmObj,\n  cards,\n  setCards,\n  isLoadingConfirm,\n  setIsLoadingConfirm,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function onClick() {\n    // console.log(\"confirm -> onClick\");\n    // console.log(confirmAction);\n    setIsLoadingConfirm(true);\n    switch (confirmAction) {\n      case \"cardDelete\":\n        const isOwn = confirmObj.ownerId === currentUser._id;\n        if (isOwn) {\n          Api.deleteCard(confirmObj.cardId)\n            .then(() => {\n              const newCards = cards.filter(\n                (c) => c.cardId !== confirmObj.cardId\n              );\n              setCards(newCards);\n            })\n            .then(() => {\n              setIsOpen(false);\n            })\n            .catch((err) => {\n              console.log(err); // выведем ошибку в консоль\n            });\n        }\n        break;\n      default:\n        break;\n    }\n    // console.log(\"Confirm -> onCLick\");\n  }\n\n  return (\n    <div className={`confirm popup ${isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container confirm__container\">\n        <h2 className=\"popup__header\">Вы уверены?</h2>\n\n        <button className=\"popup__save\" type=\"button\" onClick={onClick}>\n          Да\n        </button>\n        {isLoadingConfirm ? <Spinner /> : \"\"}\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={function (evt) {\n            evt.preventDefault();\n            setIsOpen(false);\n          }}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default Confirm;\n"]},"metadata":{},"sourceType":"module"}