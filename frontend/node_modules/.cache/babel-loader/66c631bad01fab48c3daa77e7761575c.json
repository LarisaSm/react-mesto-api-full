{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/Confirm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Confirm({\n  isOpen,\n  setIsOpen,\n  confirmAction,\n  confirmObj,\n  setСurrentUser,\n  cards,\n  setCards\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    if (isOpen) {\n      const Popup = document.querySelector(`.confirm`);\n      Popup.classList.add(\"popup_opened\");\n    }\n\n    return () => {\n      const Popup = document.querySelector(`.confirm`);\n      Popup.classList.remove(\"popup_opened\");\n    };\n  }, [isOpen]);\n\n  function onClick() {\n    console.log(\"confirm -> onClick\");\n    console.log(confirmAction);\n\n    switch (confirmAction) {\n      case 'addNewCard':\n        Api.addNewCard(confirmObj.name, confirmObj.link).then(newCard => {\n          const card = [{\n            key: newCard._id\n          }];\n          console.log(card); // setCards([newCard, ...cards]); \n        }).then(() => {\n          setIsOpen(false);\n        });\n        break;\n\n      case 'cardDelete':\n        const isOwn = confirmObj.ownerId === currentUser._id;\n\n        if (isOwn) {\n          Api.deleteCard(confirmObj.cardId).then(newCard => {\n            console.log(cards);\n            console.log(newCard);\n            const newCards = cards.filter(c => c.cardId != confirmObj.cardId);\n            setCards(newCards);\n          }).then(() => {\n            setIsOpen(false);\n          });\n        }\n\n        break;\n\n      case 'editUserAvatar':\n        Api.setUserAvatar(confirmObj.avatar).then(res => setСurrentUser(res)).then(() => {\n          setIsOpen(false);\n        });\n        break;\n\n      case 'editUserInfo':\n        Api.editUserInfo(confirmObj.name, confirmObj.about).then(res => setСurrentUser(res)).then(() => {\n          setIsOpen(false);\n        });\n    }\n\n    console.log(\"Confirm -> onCLick\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirm popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container confirm__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__header\",\n        children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__save\",\n        type: \"button\",\n        onClick: onClick,\n        children: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\",\n        onClick: function (evt) {\n          evt.preventDefault();\n          setIsOpen(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Confirm, \"N4+B0ZvPcRmPO04BSdVfW79EaTw=\");\n\n_c = Confirm;\nexport default Confirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirm\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/Confirm.js"],"names":["React","Api","CurrentUserContext","Confirm","isOpen","setIsOpen","confirmAction","confirmObj","setСurrentUser","cards","setCards","currentUser","useContext","useEffect","Popup","document","querySelector","classList","add","remove","onClick","console","log","addNewCard","name","link","then","newCard","card","key","_id","isOwn","ownerId","deleteCard","cardId","newCards","filter","c","setUserAvatar","avatar","res","editUserInfo","about","evt","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Api from '../utils/Api';\n\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\n\n\nfunction Confirm ({isOpen, setIsOpen,confirmAction, confirmObj, setСurrentUser, cards, setCards}) {\n  \n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    if(isOpen) {\n      const Popup = document.querySelector(`.confirm`);\n      Popup.classList.add(\"popup_opened\");\n    }\n    return () => {\n      const Popup = document.querySelector(`.confirm`);\n      Popup.classList.remove(\"popup_opened\");\n    };\n  }, [isOpen]); \n\n  function onClick () {\n    console.log(\"confirm -> onClick\");\n    console.log(confirmAction)\n    switch  (confirmAction) {\n      case 'addNewCard': \n        Api.addNewCard(confirmObj.name, confirmObj.link)\n        .then((newCard) => {\n          const card = [{key: newCard._id}];\n          console.log(card);\n          // setCards([newCard, ...cards]); \n        })\n        .then(() => {setIsOpen(false)}); \n        break;\n      case 'cardDelete':\n        const isOwn = confirmObj.ownerId === currentUser._id;\n        if(isOwn) {\n            Api.deleteCard(confirmObj.cardId)\n            .then((newCard) => {\n                console.log(cards);\n                console.log(newCard);\n                const newCards = cards.filter((c) => c.cardId != confirmObj.cardId);\n              setCards(newCards);\n            })\n            .then(() => {setIsOpen(false)});}\n        break;\n      case 'editUserAvatar':\n        Api.setUserAvatar(confirmObj.avatar)\n        .then((res) => setСurrentUser(res))\n        .then(() => {setIsOpen(false)});\n          break;\n      case 'editUserInfo':\n        Api.editUserInfo (confirmObj.name, confirmObj.about)\n        .then((res) => setСurrentUser(res))\n        .then(() => {setIsOpen(false)});\n          \n    } \n    \n    console.log(\"Confirm -> onCLick\");\n  }\n\n\n  return (\n    <div className=\"confirm popup\">\n    <div className=\"popup__container confirm__container\">\n      <h2 className=\"popup__header\">Вы уверены?</h2>\n      <button className=\"popup__save\" type=\"button\" onClick={onClick}>Да</button>\n      <button className=\"popup__close\" type=\"button\" onClick={function (evt) { evt.preventDefault(); setIsOpen(false)}}></button>\n    </div>\n    \n  </div>\n  )\n}\n\nexport default Confirm; "]},"metadata":{},"sourceType":"module"}