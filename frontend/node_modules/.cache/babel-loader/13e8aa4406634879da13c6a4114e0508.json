{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Api from '../utils/Api';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n  setConfirmOpen,\n  setConfirmAction,\n  setConfirmObj\n}) {\n  _s();\n\n  // const [userName, setUserName] = React.useState([]); \n  // const [userDescription, setUserDescription] = React.useState([]); \n  // const [userAvatar, setUserAvatar] = React.useState([]); \n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const currentUser = React.useContext(CurrentUserContext); // React.useEffect(() => {\n  //   Api.getUserInfo().then((res) => {\n  //     setUserName(res.name);\n  //     setUserDescription(res.about);\n  //     setUserAvatar(res.avatar);\n  //   })\n  //   .catch((err) => {\n  //     console.log(err); // выведем ошибку в консоль\n  //   });\n  // }, []);\n\n  function handleCardLike(like, cardId) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = like.some(i => i._id === currentUser._id);\n    console.log('main -> handleCardLike'); // Отправляем запрос в API и получаем обновлённые данные карточки\n    // api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n    //     setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    // });\n\n    if (!isLiked) {\n      Api.likeCard(cardId).then(newCard => {\n        setCards(state => state.map(c => c._id === cardId ? newCard : c));\n      });\n    } else {\n      Api.deleteLikeCard(cardId);\n    }\n  }\n\n  function handleCardDelete(ownerId, cardId) {\n    console.log(\"MAIN!!!!\");\n    console.log(ownerId);\n    const isOwn = ownerId === currentUser._id;\n\n    if (isOwn) {\n      Api.deleteCard(cardId);\n    }\n  }\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    Api.getInitialCards().then(res => {\n      setCards(res.map(item => ({\n        src: item.link,\n        nameImg: item.name,\n        like: item.likes,\n        cardId: item._id,\n        ownerId: item.owner._id\n      })));\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main page__main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile main__profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/#\",\n        className: \"profile__avatar-edit\",\n        onClick: onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUser.avatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__name\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__name-title\",\n            children: currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__button profile__button_type_edit\",\n            type: \"button\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__about\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__button profile__button_type_add \",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements main__elements\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this) : cards.map(({\n        cardId,\n        src,\n        nameImg,\n        like,\n        ownerId\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          ownerId: ownerId,\n          src: src,\n          nameImg: nameImg,\n          like: like,\n          cardId: cardId,\n          onCardClick: onCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          setConfirmOpen: setConfirmOpen,\n          setConfirmAction: setConfirmAction,\n          setConfirmObj: setConfirmObj\n        }, cardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 100\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Main, \"2N6sMkTfmuPWbIvzngV/WvAVqHU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/Main.js"],"names":["React","Api","Card","Spinner","CurrentUserContext","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","setConfirmOpen","setConfirmAction","setConfirmObj","cards","setCards","useState","isLoading","setIsLoading","currentUser","useContext","handleCardLike","like","cardId","isLiked","some","i","_id","console","log","likeCard","then","newCard","state","map","c","deleteLikeCard","handleCardDelete","ownerId","isOwn","deleteCard","useEffect","getInitialCards","res","item","src","link","nameImg","name","likes","owner","catch","err","avatar","about"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Api from '../utils/Api';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\n\n\n\nfunction Main ({onEditProfile, onAddPlace, onEditAvatar, onCardClick, setConfirmOpen, setConfirmAction, setConfirmObj}) {\n  // const [userName, setUserName] = React.useState([]); \n  // const [userDescription, setUserDescription] = React.useState([]); \n  // const [userAvatar, setUserAvatar] = React.useState([]); \n  const [cards, setCards] = React.useState([]); \n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // React.useEffect(() => {\n  //   Api.getUserInfo().then((res) => {\n  //     setUserName(res.name);\n  //     setUserDescription(res.about);\n  //     setUserAvatar(res.avatar);\n  //   })\n  //   .catch((err) => {\n  //     console.log(err); // выведем ошибку в консоль\n  //   });\n  // }, []);\n\n  function handleCardLike(like, cardId) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = like.some(i => i._id === currentUser._id);\n    console.log('main -> handleCardLike');\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    // api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n    //     setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    // });\n    if(!isLiked) {\n      Api.likeCard(cardId)\n      .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === cardId ? newCard : c))})\n    }\n    else {\n      Api.deleteLikeCard(cardId);\n    }\n} \n\nfunction handleCardDelete (ownerId, cardId) {\n  console.log(\"MAIN!!!!\");\n  console.log(ownerId);\n  const isOwn = ownerId === currentUser._id;\n  if(isOwn) {\n    Api.deleteCard(cardId);\n  }\n}\n\nReact.useEffect(() => {\n  setIsLoading(true);\n  Api.getInitialCards()\n  .then((res) => {\n    setCards(res.map((item) => ({\n      src: item.link,\n      nameImg: item.name,\n      like: item.likes,\n      cardId: item._id,\n      ownerId: item.owner._id\n    })));\n    setIsLoading(false);\n  })\n  .catch((err) => {\n    console.log(err); // выведем ошибку в консоль\n  });\n}, [])\n\n return ( \n <main className=\"main page__main\">\n  <section className=\"profile main__profile\">\n    <a href=\"/#\" className=\"profile__avatar-edit\" onClick={onEditAvatar}>\n      <img\n        src={currentUser.avatar}\n        alt=\"Аватар\"\n        className=\"profile__avatar\"\n      />\n    </a>\n    <div className=\"profile__info\">\n      <div className=\"profile__name\">\n        <p className=\"profile__name-title\">{currentUser.name}</p>\n        <button\n          className=\"profile__button profile__button_type_edit\"\n          type=\"button\"\n          onClick={onEditProfile}\n        ></button>\n      </div>\n      <p className=\"profile__about\">{currentUser.about}</p>\n    </div>\n    <button\n      className=\"profile__button profile__button_type_add \"\n      type=\"button\"\n      onClick={onAddPlace}\n    ></button>\n  </section>\n \n        <section className=\"elements main__elements\">\n     \n        {\n            isLoading ? <Spinner /> : cards.map(({cardId, src, nameImg, like, ownerId}) => {return <Card key={cardId} ownerId={ownerId} src={src} nameImg={nameImg} like={like} cardId={cardId} onCardClick={onCardClick} onCardLike={handleCardLike} onCardDelete={handleCardDelete} setConfirmOpen={setConfirmOpen} setConfirmAction={setConfirmAction} setConfirmObj={setConfirmObj}/>}) \n        }                \n        </section>\n        \n</main>)\n}\n\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}