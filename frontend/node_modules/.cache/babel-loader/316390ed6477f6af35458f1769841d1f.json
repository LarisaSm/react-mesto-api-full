{"ast":null,"code":"// import React from \"react\";\n// import CurrentUserContext from \"../contexts/CurrentUserContext\";\n// class Api {\n//   constructor (config) {\n//       URL = config.url;\n//       this._headers = config.headers;\n//   }\nvar URL=\"http://localhost:3005/\";export function getInitialCards(headers){return fetch(URL+'cards',{headers:{authorization:headers,\"Content-Type\":\"application/json\"}}).then(function(res){return returnData(res);});}export function addNewCard(name,link,headers){return fetch(URL+'cards',{method:'POST',headers:{authorization:headers,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,link:link})}).then(function(res){return returnData(res);});}export function editUserInfo(name,about,headers){return fetch(URL+'users/me',{method:'PATCH',headers:{authorization:headers,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,about:about})}).then(function(res){return returnData(res);});}export function getUserInfo(headers){return fetch(URL+'users/me',{headers:{authorization:headers,\"Content-Type\":\"application/json\"}}).then(function(res){return returnData(res);});}export function deleteCard(id,headers){return fetch(URL+\"cards/\".concat(id),{method:\"DELETE\",headers:{authorization:headers,\"Content-Type\":\"application/json\"}}).then(function(res){return returnData(res);});}export function likeCard(id,headers){return fetch(URL+\"cards/likes/\".concat(id),{method:\"PUT\",headers:{authorization:headers,\"Content-Type\":\"application/json\"}}).then(function(res){return returnData(res);});}export function deleteLikeCard(id,headers){return fetch(URL+\"cards/likes/\".concat(id),{method:\"DELETE\",headers:{authorization:headers,\"Content-Type\":\"application/json\"}}).then(function(res){return returnData(res);});}export function getLikesCard(id,headers){return fetch(URL+\"cards/likes/\".concat(id),{method:\"GET\",headers:{authorization:headers,\"Content-Type\":\"application/json\"}}).then(function(res){return returnData(res);});}export function setUserAvatar(avatar,headers){return fetch(URL+'users/me/avatar',{method:'PATCH',headers:{authorization:headers,\"Content-Type\":\"application/json\"},body:JSON.stringify({avatar:avatar})}).then(function(res){return returnData(res);});}function returnData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}// const api = new Api({\n//   url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n//   headers: {\n// \t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n//     \"content-type\": \"application/json\",\n//   }\n// }); \n// const api = new Api({\n//   url: \"http://localhost:3005/\",\n//   headers: {\n//         \"content-type\": \"application/json\"\n//       }\n// });","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-all/frontend/src/utils/api.js"],"names":["URL","getInitialCards","headers","fetch","authorization","then","res","returnData","addNewCard","name","link","method","body","JSON","stringify","editUserInfo","about","getUserInfo","deleteCard","id","likeCard","deleteLikeCard","getLikesCard","setUserAvatar","avatar","ok","json","Promise","reject","status"],"mappings":"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","sourcesContent":["// import React from \"react\";\n\n// import CurrentUserContext from \"../contexts/CurrentUserContext\";\n\n// class Api {\n//   constructor (config) {\n//       URL = config.url;\n//       this._headers = config.headers;\n//   }\n\nconst URL = \"http://localhost:3005/\";\n\nexport function getInitialCards(headers) {\n    return fetch(URL + 'cards', {\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n\n  })\n      .then(res => returnData(res));\n  } \n\n  export function addNewCard (name, link, headers) {\n    return fetch(URL + 'cards', {\n      method: 'POST',\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link \n      })\n    })\n    .then((res) => {\n      return returnData(res)});\n}\n\nexport function editUserInfo (name, about, headers) {\n    return fetch(URL + 'users/me', {\n    method: 'PATCH',\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      name: name,\n      about: about \n    })\n  })\n  .then((res) => returnData(res));\n}\n  \nexport function getUserInfo (headers) {\n    return fetch(URL + 'users/me', {\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n      })\n      .then((res) => returnData(res));\n    }\n\n\n    export function deleteCard(id, headers) {\n      return fetch(URL + `cards/${id}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: headers,\n            \"Content-Type\": \"application/json\",\n          },\n      }).then((res) => returnData(res))\n  }\n\n\n  export  function likeCard(id,headers) {\n    return fetch(URL + `cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n  }).then((res) => returnData(res))\n  }\n\n  export function deleteLikeCard(id, headers) {\n    return fetch(URL + `cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n  }).then((res) => returnData(res))\n  }\n\n  export function getLikesCard(id, headers) {\n    return fetch(URL + `cards/likes/${id}`, {\n      method: \"GET\",\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n  }).then((res) => returnData(res))\n  }\n\n  export function setUserAvatar(avatar, headers) {\n    return fetch(URL + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: avatar \n      })\n    })\n    .then((res) => returnData(res));\n  }\n\nfunction returnData (res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n\n\n// const api = new Api({\n//   url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n//   headers: {\n// \t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n//     \"content-type\": \"application/json\",\n//   }\n// }); \n\n// const api = new Api({\n//   url: \"http://localhost:3005/\",\n//   headers: {\n//         \"content-type\": \"application/json\"\n//       }\n// }); "]},"metadata":{},"sourceType":"module"}