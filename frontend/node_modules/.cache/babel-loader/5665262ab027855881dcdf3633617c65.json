{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/react-mesto-api-full/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import CurrentUserContext from\"../contexts/CurrentUserContext\";function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateUser=_ref.onUpdateUser,isLoadingPopup=_ref.isLoadingPopup;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),inputAboutValue=_React$useState2[0],setInputAboutValue=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),inputNameValue=_React$useState4[0],setInputNameValue=_React$useState4[1];// Подписка на контекст\nvar currentUser=React.useContext(CurrentUserContext);function handleNameChange(evt){setInputNameValue(evt.target.value);}function handleAboutChange(evt){setInputAboutValue(evt.target.value);}function handleSubmit(e){e.preventDefault();onUpdateUser(inputNameValue,inputAboutValue);}// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setInputAboutValue(currentUser.about);setInputNameValue(currentUser.name);},[currentUser]);return/*#__PURE__*/_jsxs(PopupWithForm,{button:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",formId:\"edit-user\",isOpen:isOpen,onClose:onClose,onSubmit:function onSubmit(e){return handleSubmit(e);},isLoadingPopup:isLoadingPopup,children:[/*#__PURE__*/_jsx(\"input\",{id:\"name-input\",type:\"text\",className:\"popup__input popup__input_type_name\",autoComplete:\"off\",placeholder:\"\\u0418\\u043C\\u044F\",name:\"name\",minLength:\"2\",maxLength:\"40\",value:inputNameValue,onChange:function onChange(e){return handleNameChange(e);},required:true}),/*#__PURE__*/_jsx(\"span\",{id:\"name-input-error\",className:\"popup__input-error\"}),/*#__PURE__*/_jsx(\"input\",{id:\"about-input\",type:\"text\",className:\"popup__input popup__input_type_about\",autoComplete:\"off\",placeholder:\"\\u041E \\u0441\\u0435\\u0431\\u0435\",name:\"about\",value:inputAboutValue,minLength:\"2\",maxLength:\"200\",required:true,onChange:handleAboutChange}),/*#__PURE__*/_jsx(\"span\",{id:\"about-input-error\",className:\"popup__input-error\"})]});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/react-mesto-api-full/react-mesto-api-full/frontend/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","isLoadingPopup","useState","inputAboutValue","setInputAboutValue","inputNameValue","setInputNameValue","currentUser","useContext","handleNameChange","evt","target","value","handleAboutChange","handleSubmit","e","preventDefault","useEffect","about","name"],"mappings":"mbAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CAEA,QAASC,CAAAA,gBAAT,MAA6E,IAAjDC,CAAAA,MAAiD,MAAjDA,MAAiD,CAAzCC,OAAyC,MAAzCA,OAAyC,CAAhCC,YAAgC,MAAhCA,YAAgC,CAAlBC,cAAkB,MAAlBA,cAAkB,qBAC7BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAD6B,oDACpEC,eADoE,qBACnDC,kBADmD,0CAE/BV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAF+B,qDAEpEG,cAFoE,qBAEpDC,iBAFoD,qBAG3E;AACA,GAAMC,CAAAA,WAAW,CAAGb,KAAK,CAACc,UAAN,CAAiBZ,kBAAjB,CAApB,CAEA,QAASa,CAAAA,gBAAT,CAA0BC,GAA1B,CAA+B,CAC7BJ,iBAAiB,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAjB,CACD,CAED,QAASC,CAAAA,iBAAT,CAA2BH,GAA3B,CAAgC,CAC9BN,kBAAkB,CAACM,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAlB,CACD,CAED,QAASE,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACvBA,CAAC,CAACC,cAAF,GACAhB,YAAY,CAACK,cAAD,CAAiBF,eAAjB,CAAZ,CACD,CAED;AACA;AACAT,KAAK,CAACuB,SAAN,CAAgB,UAAM,CACpBb,kBAAkB,CAACG,WAAW,CAACW,KAAb,CAAlB,CACAZ,iBAAiB,CAACC,WAAW,CAACY,IAAb,CAAjB,CACD,CAHD,CAGG,CAACZ,WAAD,CAHH,EAKA,mBACE,MAAC,aAAD,EACE,MAAM,CAAC,wDADT,CAEE,KAAK,CAAC,2HAFR,CAGE,MAAM,CAAC,WAHT,CAIE,MAAM,CAAET,MAJV,CAKE,OAAO,CAAEC,OALX,CAME,QAAQ,CAAE,kBAACgB,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EANZ,CAOE,cAAc,CAAEd,cAPlB,wBASE,cACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,qCAHZ,CAIE,YAAY,CAAC,KAJf,CAKE,WAAW,CAAC,oBALd,CAME,IAAI,CAAC,MANP,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,IARZ,CASE,KAAK,CAAEI,cATT,CAUE,QAAQ,CAAE,kBAACU,CAAD,QAAON,CAAAA,gBAAgB,CAACM,CAAD,CAAvB,EAVZ,CAWE,QAAQ,KAXV,EATF,cAsBE,aAAM,EAAE,CAAC,kBAAT,CAA4B,SAAS,CAAC,oBAAtC,EAtBF,cAuBE,cACE,EAAE,CAAC,aADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,sCAHZ,CAIE,YAAY,CAAC,KAJf,CAKE,WAAW,CAAC,iCALd,CAME,IAAI,CAAC,OANP,CAOE,KAAK,CAAEZ,eAPT,CAQE,SAAS,CAAC,GARZ,CASE,SAAS,CAAC,KATZ,CAUE,QAAQ,KAVV,CAWE,QAAQ,CAAEU,iBAXZ,EAvBF,cAoCE,aAAM,EAAE,CAAC,mBAAT,CAA6B,SAAS,CAAC,oBAAvC,EApCF,GADF,CAwCD,CAED,cAAehB,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoadingPopup }) {\n  const [inputAboutValue, setInputAboutValue] = React.useState(\"\");\n  const [inputNameValue, setInputNameValue] = React.useState(\"\");\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleNameChange(evt) {\n    setInputNameValue(evt.target.value);\n  }\n\n  function handleAboutChange(evt) {\n    setInputAboutValue(evt.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser(inputNameValue, inputAboutValue);\n  }\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setInputAboutValue(currentUser.about);\n    setInputNameValue(currentUser.name);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      button=\"Сохранить\"\n      title=\"Редактировать профиль\"\n      formId=\"edit-user\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={(e) => handleSubmit(e)}\n      isLoadingPopup={isLoadingPopup}\n    >\n      <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Имя\"\n        name=\"name\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={inputNameValue}\n        onChange={(e) => handleNameChange(e)}\n        required\n      />\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input\n        id=\"about-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_about\"\n        autoComplete=\"off\"\n        placeholder=\"О себе\"\n        name=\"about\"\n        value={inputAboutValue}\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n        onChange={handleAboutChange}\n      />\n      <span id=\"about-input-error\" className=\"popup__input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}