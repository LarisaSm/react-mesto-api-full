{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import Card from\"./Card\";import Spinner from\"./Spinner\";import CurrentUserContext from\"../contexts/CurrentUserContext\";function Main(_ref){var cards=_ref.cards,onCardLike=_ref.onCardLike,onEditProfile=_ref.onEditProfile,onAddPlace=_ref.onAddPlace,onEditAvatar=_ref.onEditAvatar,onCardClick=_ref.onCardClick,setConfirmOpen=_ref.setConfirmOpen,isLoading=_ref.isLoading,onCardDelete=_ref.onCardDelete;var currentUser=React.useContext(CurrentUserContext);return/*#__PURE__*/_jsxs(\"main\",{className:\"main page__main\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"profile main__profile\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/#\",className:\"profile__avatar-edit\",onClick:onEditAvatar,children:/*#__PURE__*/_jsx(\"img\",{src:currentUser.avatar,alt:\"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",className:\"profile__avatar\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile__info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__name\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"profile__name-title\",children:currentUser.name}),/*#__PURE__*/_jsx(\"button\",{className:\"profile__button profile__button_type_edit\",type:\"button\",onClick:onEditProfile})]}),/*#__PURE__*/_jsx(\"p\",{className:\"profile__about\",children:currentUser.about})]}),/*#__PURE__*/_jsx(\"button\",{className:\"profile__button profile__button_type_add \",type:\"button\",onClick:onAddPlace})]}),/*#__PURE__*/_jsx(\"section\",{className:\"elements main__elements\",children:isLoading?/*#__PURE__*/_jsx(Spinner,{}):cards.map(function(_ref2){var cardId=_ref2.cardId,src=_ref2.src,nameImg=_ref2.nameImg,like=_ref2.like,ownerId=_ref2.ownerId;return/*#__PURE__*/_jsx(Card,{ownerId:ownerId,src:src,nameImg:nameImg,like:like,cardId:cardId,onCardClick:onCardClick,onCardLike:onCardLike,onCardDelete:onCardDelete,setConfirmOpen:setConfirmOpen},cardId);})})]});}export default Main;","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-all/frontend/src/components/Main.js"],"names":["React","Card","Spinner","CurrentUserContext","Main","cards","onCardLike","onEditProfile","onAddPlace","onEditAvatar","onCardClick","setConfirmOpen","isLoading","onCardDelete","currentUser","useContext","avatar","name","about","map","cardId","src","nameImg","like","ownerId"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CAEA,QAASC,CAAAA,IAAT,MAUG,IATDC,CAAAA,KASC,MATDA,KASC,CARDC,UAQC,MARDA,UAQC,CAPDC,aAOC,MAPDA,aAOC,CANDC,UAMC,MANDA,UAMC,CALDC,YAKC,MALDA,YAKC,CAJDC,WAIC,MAJDA,WAIC,CAHDC,cAGC,MAHDA,cAGC,CAFDC,SAEC,MAFDA,SAEC,CADDC,YACC,MADDA,YACC,CACD,GAAMC,CAAAA,WAAW,CAAGd,KAAK,CAACe,UAAN,CAAiBZ,kBAAjB,CAApB,CAGA,mBACE,cAAM,SAAS,CAAC,iBAAhB,wBACE,iBAAS,SAAS,CAAC,uBAAnB,wBACE,UAAG,IAAI,CAAC,IAAR,CAAa,SAAS,CAAC,sBAAvB,CAA8C,OAAO,CAAEM,YAAvD,uBACE,YACE,GAAG,CAAEK,WAAW,CAACE,MADnB,CAEE,GAAG,CAAC,sCAFN,CAGE,SAAS,CAAC,iBAHZ,EADF,EADF,cAQE,aAAK,SAAS,CAAC,eAAf,wBACE,aAAK,SAAS,CAAC,eAAf,wBACE,UAAG,SAAS,CAAC,qBAAb,UAAoCF,WAAW,CAACG,IAAhD,EADF,cAEE,eACE,SAAS,CAAC,2CADZ,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEV,aAHX,EAFF,GADF,cASE,UAAG,SAAS,CAAC,gBAAb,UAA+BO,WAAW,CAACI,KAA3C,EATF,GARF,cAmBE,eACE,SAAS,CAAC,2CADZ,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEV,UAHX,EAnBF,GADF,cA0BE,gBAAS,SAAS,CAAC,yBAAnB,UACGI,SAAS,cACR,KAAC,OAAD,IADQ,CAGRP,KAAK,CAACc,GAAN,CAAU,eAA6C,IAA1CC,CAAAA,MAA0C,OAA1CA,MAA0C,CAAlCC,GAAkC,OAAlCA,GAAkC,CAA7BC,OAA6B,OAA7BA,OAA6B,CAApBC,IAAoB,OAApBA,IAAoB,CAAdC,OAAc,OAAdA,OAAc,CACrD,mBACE,KAAC,IAAD,EAEE,OAAO,CAAEA,OAFX,CAGE,GAAG,CAAEH,GAHP,CAIE,OAAO,CAAEC,OAJX,CAKE,IAAI,CAAEC,IALR,CAME,MAAM,CAAEH,MANV,CAOE,WAAW,CAAEV,WAPf,CAQE,UAAU,CAAEJ,UARd,CASE,YAAY,CAAEO,YAThB,CAUE,cAAc,CAAEF,cAVlB,EACOS,MADP,CADF,CAcD,CAfD,CAJJ,EA1BF,GADF,CAmDD,CAED,cAAehB,CAAAA,IAAf","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport Spinner from \"./Spinner\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n  cards,\n  onCardLike,\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n  setConfirmOpen,\n  isLoading,\n  onCardDelete,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n\n  return (\n    <main className=\"main page__main\">\n      <section className=\"profile main__profile\">\n        <a href=\"/#\" className=\"profile__avatar-edit\" onClick={onEditAvatar}>\n          <img\n            src={currentUser.avatar}\n            alt=\"Аватар\"\n            className=\"profile__avatar\"\n          />\n        </a>\n        <div className=\"profile__info\">\n          <div className=\"profile__name\">\n            <p className=\"profile__name-title\">{currentUser.name}</p>\n            <button\n              className=\"profile__button profile__button_type_edit\"\n              type=\"button\"\n              onClick={onEditProfile}\n            ></button>\n          </div>\n          <p className=\"profile__about\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__button profile__button_type_add \"\n          type=\"button\"\n          onClick={onAddPlace}\n        ></button>\n      </section>\n      <section className=\"elements main__elements\">\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          cards.map(({ cardId, src, nameImg, like, ownerId }) => {\n            return (\n              <Card\n                key={cardId}\n                ownerId={ownerId}\n                src={src}\n                nameImg={nameImg}\n                like={like}\n                cardId={cardId}\n                onCardClick={onCardClick}\n                onCardLike={onCardLike}\n                onCardDelete={onCardDelete}\n                setConfirmOpen={setConfirmOpen}\n              />\n            );\n          })\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}