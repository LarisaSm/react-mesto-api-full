{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-all/frontend/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Card({\n  cardId,\n  src,\n  nameImg,\n  like,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  ownerId,\n  setConfirmOpen\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = ownerId === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__trash ${isOwn ? \" \" : \"element__trash_invisible\"}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = like.some(i => i._id === currentUser._id);\n  console.log(isLiked);\n  console.log(currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked ? \"element__like_type_active\" : \" \"}`;\n\n  function handleImgClick() {\n    onCardClick({\n      src,\n      nameImg\n    });\n  }\n\n  function handleLikeClick() {\n    // console.log(\"========LIKE=======\");\n    // console.log(like);\n    onCardLike(like, cardId);\n  }\n\n  function handleDeleteClick() {\n    setConfirmOpen(true);\n    onCardDelete({\n      ownerId: ownerId,\n      cardId: cardId\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: nameImg,\n      className: \"element__img\",\n      onClick: handleImgClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__name\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"element__title\",\n        children: nameImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__likes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"element__like-counter\",\n          children: like.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      type: \"button\",\n      onClick: handleDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-all/frontend/src/components/Card.js"],"names":["React","CurrentUserContext","Card","cardId","src","nameImg","like","onCardClick","onCardLike","onCardDelete","ownerId","setConfirmOpen","currentUser","useContext","isOwn","_id","cardDeleteButtonClassName","isLiked","some","i","console","log","cardLikeButtonClassName","handleImgClick","handleLikeClick","handleDeleteClick","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,IAAT,CAAc;AACZC,EAAAA,MADY;AAEZC,EAAAA,GAFY;AAGZC,EAAAA,OAHY;AAIZC,EAAAA,IAJY;AAKZC,EAAAA,WALY;AAMZC,EAAAA,UANY;AAOZC,EAAAA,YAPY;AAQZC,EAAAA,OARY;AASZC,EAAAA;AATY,CAAd,EAUG;AAAA;;AACD,QAAMC,WAAW,GAAGZ,KAAK,CAACa,UAAN,CAAiBZ,kBAAjB,CAApB,CADC,CAGD;;AACA,QAAMa,KAAK,GAAGJ,OAAO,KAAKE,WAAW,CAACG,GAAtC,CAJC,CAKD;;AACA,QAAMC,yBAAyB,GAAI,kBACjCF,KAAK,GAAG,GAAH,GAAS,0BACf,EAFD,CANC,CAUD;;AACA,QAAMG,OAAO,GAAGX,IAAI,CAACY,IAAL,CAAWC,CAAD,IAAOA,CAAC,CAACJ,GAAF,KAAUH,WAAW,CAACG,GAAvC,CAAhB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,WAAW,CAACG,GAAxB,EAdC,CAeD;;AACA,QAAMO,uBAAuB,GAAI,iBAC/BL,OAAO,GAAG,2BAAH,GAAiC,GACzC,EAFD;;AAIA,WAASM,cAAT,GAA0B;AACxBhB,IAAAA,WAAW,CAAC;AAAEH,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAX;AACD;;AAED,WAASmB,eAAT,GAA2B;AACzB;AACA;AACAhB,IAAAA,UAAU,CAACF,IAAD,EAAOH,MAAP,CAAV;AACD;;AAED,WAASsB,iBAAT,GAA6B;AAC3Bd,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,IAAAA,YAAY,CAAC;AACXC,MAAAA,OAAO,EAAEA,OADE;AAEXP,MAAAA,MAAM,EAAEA;AAFG,KAAD,CAAZ;AAID;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AACE,MAAA,GAAG,EAAEC,GADP;AAEE,MAAA,GAAG,EAAEC,OAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,OAAO,EAAEkB;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgClB;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAEiB,uBADb;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEE;AAHX;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsClB,IAAI,CAACoB;AAA3C;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAkBE;AACE,MAAA,SAAS,EAAEV,yBADb;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAES;AAHX;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1EQvB,I;;KAAAA,I;AA4ET,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction Card({\n  cardId,\n  src,\n  nameImg,\n  like,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  ownerId,\n  setConfirmOpen,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = ownerId === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `element__trash ${\n    isOwn ? \" \" : \"element__trash_invisible\"\n  }`;\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = like.some((i) => i._id === currentUser._id);\n\n  console.log(isLiked);\n  console.log(currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like ${\n    isLiked ? \"element__like_type_active\" : \" \"\n  }`;\n\n  function handleImgClick() {\n    onCardClick({ src, nameImg });\n  }\n\n  function handleLikeClick() {\n    // console.log(\"========LIKE=======\");\n    // console.log(like);\n    onCardLike(like, cardId);\n  }\n\n  function handleDeleteClick() {\n    setConfirmOpen(true);\n    onCardDelete({\n      ownerId: ownerId,\n      cardId: cardId,\n    });\n  }\n\n  return (\n    <div className=\"element\">\n      <img\n        src={src}\n        alt={nameImg}\n        className=\"element__img\"\n        onClick={handleImgClick}\n      />\n      <div className=\"element__name\">\n        <h3 className=\"element__title\">{nameImg}</h3>\n        <div className=\"element__likes\">\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            onClick={handleLikeClick}\n          ></button>\n          <p className=\"element__like-counter\">{like.length}</p>\n        </div>\n      </div>\n      <button\n        className={cardDeleteButtonClassName}\n        type=\"button\"\n        onClick={handleDeleteClick}\n      ></button>\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}