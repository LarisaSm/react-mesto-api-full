{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card({\n  cardId,\n  src,\n  nameImg,\n  like,\n  onCardClick,\n  onCardLike,\n  ownerId,\n  onCardDelete\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = ownerId === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__trash ${isOwn ? ' ' : 'element__trash_invisible'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = like.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_type_active' : ' '}`;\n\n  function handleImgClick() {\n    onCardClick({\n      src,\n      nameImg\n    });\n  }\n\n  function handleLikeClick() {\n    console.log(\"========LIKE=======\");\n    console.log(like); // onCardLike({like});\n  }\n\n  function handleCardDelete(ownerId) {\n    console.log(\"handleCardDelete\");\n    onCardDelete(ownerId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: nameImg,\n      className: \"element__img\",\n      onClick: handleImgClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__name\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"element__title\",\n        children: nameImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__likes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"element__like\",\n          type: \"button\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"element__like-counter\",\n          children: like.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      type: \"button\",\n      onClick: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/Card.js"],"names":["React","CurrentUserContext","Card","cardId","src","nameImg","like","onCardClick","onCardLike","ownerId","onCardDelete","currentUser","useContext","isOwn","_id","cardDeleteButtonClassName","isLiked","some","i","cardLikeButtonClassName","handleImgClick","handleLikeClick","console","log","handleCardDelete","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,IAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,UAA1C;AAAsDC,EAAAA,OAAtD;AAA+DC,EAAAA;AAA/D,CAAf,EAA6F;AAAA;;AAE3F,QAAMC,WAAW,GAAGX,KAAK,CAACY,UAAN,CAAiBX,kBAAjB,CAApB,CAF2F,CAI3F;;AACA,QAAMY,KAAK,GAAGJ,OAAO,KAAKE,WAAW,CAACG,GAAtC,CAL2F,CAM3F;;AACA,QAAMC,yBAAyB,GAC5B,kBAAiBF,KAAK,GAAG,GAAH,GAAS,0BAA2B,EAD7D,CAP2F,CAY3F;;AACF,QAAMG,OAAO,GAAGV,IAAI,CAACW,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACJ,GAAF,KAAUH,WAAW,CAACG,GAArC,CAAhB,CAb6F,CAe7F;;AACA,QAAMK,uBAAuB,GAC1B,iBAAgBH,OAAO,GAAG,2BAAH,GAAiC,GAAI,EAD/D;;AAIE,WAASI,cAAT,GAAyB;AACvBb,IAAAA,WAAW,CAAC;AAACH,MAAAA,GAAD;AAAMC,MAAAA;AAAN,KAAD,CAAX;AACD;;AAED,WAASgB,eAAT,GAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAFyB,CAGzB;AACD;;AAED,WAASkB,gBAAT,CAA0Bf,OAA1B,EAAkC;AAChCa,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAb,IAAAA,YAAY,CAACD,OAAD,CAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEL,GAAV;AAAe,MAAA,GAAG,EAAEC,OAApB;AAA6B,MAAA,SAAS,EAAC,cAAvC;AAAsD,MAAA,OAAO,EAAEe;AAA/D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCf;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAgD,UAAA,OAAO,EAAEgB;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCf,IAAI,CAACmB;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAQ,MAAA,SAAS,EAAEV,yBAAnB;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAA4D,MAAA,OAAO,EAAES;AAArE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhDQtB,I;;KAAAA,I;AAkDT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\nfunction Card ({cardId, src, nameImg, like, onCardClick, onCardLike, ownerId, onCardDelete}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = ownerId === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `element__trash ${isOwn ? ' ' : 'element__trash_invisible'}`\n  ); \n\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\nconst isLiked = like.some(i => i._id === currentUser._id);\n\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\nconst cardLikeButtonClassName = (\n  `element__like ${isLiked ? 'element__like_type_active' : ' '}`\n); \n\n  function handleImgClick(){\n    onCardClick({src, nameImg});\n  }\n\n  function handleLikeClick() {\n    console.log(\"========LIKE=======\");\n    console.log(like);\n    // onCardLike({like});\n  }\n\n  function handleCardDelete(ownerId){\n    console.log(\"handleCardDelete\");\n    onCardDelete(ownerId);\n  }\n\n  return (\n    <div className=\"element\">\n      <img src={src} alt={nameImg} className=\"element__img\" onClick={handleImgClick}/>\n      <div className=\"element__name\">\n        <h3 className=\"element__title\">{nameImg}</h3>\n        <div className=\"element__likes\">\n          <button className=\"element__like\" type=\"button\" onClick={handleLikeClick}></button>\n          <p className=\"element__like-counter\">{like.length}</p>\n        </div>\n      </div>\n      <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleCardDelete}></button>\n    </div>\n  );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}