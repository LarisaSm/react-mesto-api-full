{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  setConfirmOpen,\n  setConfirmAction\n}) {\n  _s();\n\n  const [inputAboutValue, setInputAboutValue] = React.useState([]);\n  const [inputNameValue, setInputNameValue] = React.useState([]);\n\n  function handleNameChange(evt) {\n    setInputNameValue(evt.target.value);\n  }\n\n  function handleAboutChange(evt) {\n    setInputAboutValue(evt.target.value);\n  }\n\n  function editUserInfo(name, about) {\n    setConfirmAction('editUserInfo');\n    setConfirmObj({\n      name: name,\n      about: about\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    formId: \"edit-user\",\n    isOpen: isOpen,\n    onClose: onClose,\n    setConfirmOpen: setConfirmOpen,\n    confirmAction: () => editUserInfo(inputNameValue, inputAboutValue),\n    setConfirmAction: setConfirmAction,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name-input\",\n        type: \"text\",\n        className: \"popup__input popup__input_type_name\",\n        autoComplete: \"off\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        name: \"name\",\n        minLength: \"2\",\n        maxLength: \"40\",\n        value: inputNameValue,\n        onChange: e => handleNameChange(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"name-input-error\",\n        className: \"popup__input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"about-input\",\n        type: \"text\",\n        className: \"popup__input popup__input_type_about\",\n        autoComplete: \"off\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        name: \"about\",\n        value: inputAboutValue,\n        minLength: \"2\",\n        maxLength: \"200\",\n        required: true,\n        onChange: handleAboutChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"about-input-error\",\n        className: \"popup__input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n}\n\n_s(EditProfilePopup, \"Z4w1ncFxkk7derOv0FhXUZ/ND8s=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/EditProfilePopup.js"],"names":["React","EditProfilePopup","isOpen","onClose","setConfirmOpen","setConfirmAction","inputAboutValue","setInputAboutValue","useState","inputNameValue","setInputNameValue","handleNameChange","evt","target","value","handleAboutChange","editUserInfo","name","about","setConfirmObj","e"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,gBAAT,CAA2B;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,cAAlB;AAAkCC,EAAAA;AAAlC,CAA3B,EAA+E;AAAA;;AAE7E,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA9C;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5C;;AAEA,WAASG,gBAAT,CAA2BC,GAA3B,EAAgC;AAC9BF,IAAAA,iBAAiB,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAjB;AACA;;AAED,WAASC,iBAAT,CAA4BH,GAA5B,EAAiC;AAChCL,IAAAA,kBAAkB,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAlB;AACA;;AAED,WAASE,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AAClCb,IAAAA,gBAAgB,CAAC,cAAD,CAAhB;AACAc,IAAAA,aAAa,CAAC;AACZF,MAAAA,IAAI,EAAEA,IADM;AAEZC,MAAAA,KAAK,EAAEA;AAFK,KAAD,CAAb;AAIA;;AAEJ,sBACA,QAAC,aAAD;AACQ,IAAA,MAAM,EAAC,wDADf;AAEQ,IAAA,KAAK,EAAC,2HAFd;AAGQ,IAAA,MAAM,EAAC,WAHf;AAIQ,IAAA,MAAM,EAAEhB,MAJhB;AAKQ,IAAA,OAAO,EAAEC,OALjB;AAMQ,IAAA,cAAc,EAAEC,cANxB;AAOQ,IAAA,aAAa,EAAE,MAAMY,YAAY,CAACP,cAAD,EAAiBH,eAAjB,CAPzC;AAQQ,IAAA,gBAAgB,EAAED,gBAR1B;AAUQ,IAAA,QAAQ,eAAE;AAAA,8BACR;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,qCAHZ;AAIE,QAAA,YAAY,EAAC,KAJf;AAKE,QAAA,WAAW,EAAC,oBALd;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,SAAS,EAAC,GAPZ;AAQE,QAAA,SAAS,EAAC,IARZ;AASE,QAAA,KAAK,EAAEI,cATT;AAUE,QAAA,QAAQ,EAAGW,CAAD,IAAOT,gBAAgB,CAACS,CAAD,CAVnC;AAWE,QAAA,QAAQ;AAXV;AAAA;AAAA;AAAA;AAAA,cADQ,eAcR;AAAM,QAAA,EAAE,EAAC,kBAAT;AAA4B,QAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAdQ,eAeR;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,sCAHZ;AAIE,QAAA,YAAY,EAAC,KAJf;AAKE,QAAA,WAAW,EAAC,iCALd;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,KAAK,EAAEd,eAPT;AAQE,QAAA,SAAS,EAAC,GARZ;AASE,QAAA,SAAS,EAAC,KATZ;AAUE,QAAA,QAAQ,MAVV;AAWE,QAAA,QAAQ,EAAES;AAXZ;AAAA;AAAA;AAAA;AAAA,cAfQ,eA4BR;AAAM,QAAA,EAAE,EAAC,mBAAT;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cA5BQ;AAAA;AAVlB;AAAA;AAAA;AAAA;AAAA,UADA;AA6CC;;GAlEQd,gB;;KAAAA,gB;AAoET,eAAeA,gBAAf","sourcesContent":["\nimport React from 'react';\n\n\nfunction EditProfilePopup ({isOpen, onClose, setConfirmOpen, setConfirmAction}){\n\n  const [inputAboutValue, setInputAboutValue] = React.useState([]);\n  const [inputNameValue, setInputNameValue] = React.useState([]);\n\n  function handleNameChange (evt) {\n    setInputNameValue(evt.target.value);\n   }\n \n   function handleAboutChange (evt) {\n    setInputAboutValue(evt.target.value);\n   }\n \n   function editUserInfo(name, about) {\n    setConfirmAction('editUserInfo');\n    setConfirmObj({\n      name: name,\n      about: about \n    })\n   }\n\nreturn (\n<PopupWithForm \n        button=\"Сохранить\" \n        title=\"Редактировать профиль\" \n        formId=\"edit-user\" \n        isOpen={isOpen} \n        onClose={onClose}\n        setConfirmOpen={setConfirmOpen}\n        confirmAction={() => editUserInfo(inputNameValue, inputAboutValue)}\n        setConfirmAction={setConfirmAction}\n        \n        children={<>\n          <input\n            id=\"name-input\"\n            type=\"text\"\n            className=\"popup__input popup__input_type_name\"\n            autoComplete=\"off\"\n            placeholder=\"Имя\"\n            name=\"name\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            value={inputNameValue}\n            onChange={(e) => handleNameChange(e)}\n            required\n          />\n          <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n          <input\n            id=\"about-input\"\n            type=\"text\"\n            className=\"popup__input popup__input_type_about\"\n            autoComplete=\"off\"\n            placeholder=\"О себе\"\n            name=\"about\"\n            value={inputAboutValue}\n            minLength=\"2\"\n            maxLength=\"200\"\n            required\n            onChange={handleAboutChange}\n          />\n          <span id=\"about-input-error\" className=\"popup__input-error\"></span>\n          </>}\n      />)\n\n\n\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}