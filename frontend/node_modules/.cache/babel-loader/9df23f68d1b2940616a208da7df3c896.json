{"ast":null,"code":"// import React from \"react\";\n// import CurrentUserContext from \"../contexts/CurrentUserContext\";\n// class Api {\n//   constructor (config) {\n//       URL = config.url;\n//       this._headers = config.headers;\n//   }\nconst URL = \"http://localhost:3005/\";\nexport function getInitialCards(headers) {\n  console.log(\"getInitCards\");\n  console.log(headers);\n  return fetch(URL + 'cards', {\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => returnData(res));\n}\nexport function addNewCard(name, link, headers) {\n  console.log(\"addNewCard\");\n  console.log(name);\n  return fetch(URL + 'cards', {\n    method: 'POST',\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(res => {\n    returnData(res);\n  });\n}\nexport function editUserInfo(name, about, headers) {\n  return fetch(URL + 'users/me', {\n    method: 'PATCH',\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(res => returnData(res));\n}\nexport function getUserInfo(headers) {\n  console.log(headers);\n  return fetch(URL + 'users/me', {\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => returnData(res));\n}\nexport function deleteCard(id, headers) {\n  return fetch(URL + `cards/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => returnData(res));\n}\nexport function likeCard(id, headers) {\n  return fetch(URL + `cards/likes/${id}`, {\n    method: \"PUT\",\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => returnData(res));\n}\nexport function deleteLikeCard(id, headers) {\n  return fetch(URL + `cards/likes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => returnData(res));\n}\nexport function getLikesCard(id, headers) {\n  return fetch(URL + `cards/likes/${id}`, {\n    method: \"GET\",\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => returnData(res));\n}\nexport function setUserAvatar(avatar, headers) {\n  return fetch(URL + 'users/me/avatar', {\n    method: 'PATCH',\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(res => returnData(res));\n}\n\nfunction returnData(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n} // const api = new Api({\n//   url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n//   headers: {\n// \t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n//     \"content-type\": \"application/json\",\n//   }\n// }); \n// const api = new Api({\n//   url: \"http://localhost:3005/\",\n//   headers: {\n//         \"content-type\": \"application/json\"\n//       }\n// });","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-all/frontend/src/utils/api.js"],"names":["URL","getInitialCards","headers","console","log","fetch","authorization","then","res","returnData","addNewCard","name","link","method","body","JSON","stringify","editUserInfo","about","getUserInfo","deleteCard","id","likeCard","deleteLikeCard","getLikesCard","setUserAvatar","avatar","ok","json","Promise","reject","status"],"mappings":"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","sourcesContent":["// import React from \"react\";\n\n// import CurrentUserContext from \"../contexts/CurrentUserContext\";\n\n// class Api {\n//   constructor (config) {\n//       URL = config.url;\n//       this._headers = config.headers;\n//   }\n\nconst URL = \"http://localhost:3005/\";\n\nexport function getInitialCards(headers) {\n    console.log(\"getInitCards\");\n    console.log(headers);\n    return fetch(URL + 'cards', {\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n\n  })\n      .then(res => returnData(res));\n  } \n\n  export function addNewCard (name, link, headers) {\n    console.log(\"addNewCard\");\n    console.log(name);\n    return fetch(URL + 'cards', {\n      method: 'POST',\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link \n      })\n    })\n    .then((res) => {\n      returnData(res)});\n}\n\nexport function editUserInfo (name, about, headers) {\n    return fetch(URL + 'users/me', {\n    method: 'PATCH',\n    headers: {\n      authorization: headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      name: name,\n      about: about \n    })\n  })\n  .then((res) => returnData(res));\n}\n  \nexport function getUserInfo (headers) {\n    console.log(headers);\n    return fetch(URL + 'users/me', {\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n      })\n      .then((res) => returnData(res));\n    }\n\n\n    export function deleteCard(id, headers) {\n      return fetch(URL + `cards/${id}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: headers,\n            \"Content-Type\": \"application/json\",\n          },\n      }).then((res) => returnData(res))\n  }\n\n\n  export  function likeCard(id,headers) {\n    return fetch(URL + `cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n  }).then((res) => returnData(res))\n  }\n\n  export function deleteLikeCard(id, headers) {\n    return fetch(URL + `cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n  }).then((res) => returnData(res))\n  }\n\n  export function getLikesCard(id, headers) {\n    return fetch(URL + `cards/likes/${id}`, {\n      method: \"GET\",\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n  }).then((res) => returnData(res))\n  }\n\n  export function setUserAvatar(avatar, headers) {\n    return fetch(URL + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: avatar \n      })\n    })\n    .then((res) => returnData(res));\n  }\n\nfunction returnData (res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n\n\n// const api = new Api({\n//   url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\n//   headers: {\n// \t\tauthorization: '4b126959-9593-4c1c-9c1d-30d3e8eeddbf',\n//     \"content-type\": \"application/json\",\n//   }\n// }); \n\n// const api = new Api({\n//   url: \"http://localhost:3005/\",\n//   headers: {\n//         \"content-type\": \"application/json\"\n//       }\n// }); "]},"metadata":{},"sourceType":"module"}