{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Confirm from './Confirm';\nimport Api from '../utils/Api';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacerPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n  const [isConfirmOpen, setConfirmOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState([]);\n  const [currentUser, setСurrentUser] = React.useState([]);\n  const [inputCardName, setInputCardName] = React.useState([]);\n  const [inputCardLink, setInputCardLink] = React.useState([]);\n  const [confirmAction, setConfirmAction] = React.useState({});\n  const [confirmObj, setConfirmObj] = React.useState({});\n  React.useEffect(() => {\n    Api.getUserInfo().then(res => {\n      setСurrentUser(res);\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n\n  function closeAllPopups() {\n    setEditProfilePopupState(false);\n    setEditAvatarPopupState(false);\n    setAddPlacerPopupState(false);\n    setImagePopupState(false);\n    setSelectedCard([]);\n  }\n\n  function handleCardClick({\n    src,\n    nameImg\n  }) {\n    setSelectedCard({\n      src,\n      nameImg\n    });\n    setImagePopupState(true);\n  }\n\n  function handleConfirmClick() {\n    setConfirmOpen(true);\n  }\n\n  function handleEditProfileClick(evt) {\n    evt.preventDefault();\n    setEditProfilePopupState(true);\n  }\n\n  function handleEditAvatarClick(e) {\n    e.preventDefault();\n    setEditAvatarPopupState(true);\n  }\n\n  function handleAddPlaceClick(evt) {\n    evt.preventDefault();\n    setAddPlacerPopupState(true);\n  }\n\n  function handleCardName(evt) {\n    setInputCardName(evt.target.value);\n  }\n\n  function handleCardLink(evt) {\n    setInputCardLink(evt.target.value);\n  }\n\n  function addNewCard(name, link) {\n    setConfirmAction('addNewCard');\n    setConfirmObj({\n      name: name,\n      link: link\n    });\n  }\n\n  function handleCardLike(like, cardId) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = like.some(i => i._id === currentUser._id);\n    console.log('main -> handleCardLike');\n\n    if (!isLiked) {\n      console.log(\"main -> handleCardLike -> like\");\n      Api.likeCard(cardId).then(newCard => {\n        const newCards = cards.map(c => c.cardId === newCard._id ? {\n          src: newCard.link,\n          nameImg: newCard.name,\n          like: newCard.likes,\n          cardId: newCard._id,\n          ownerId: newCard.owner._id\n        } : c);\n        setCards(newCards);\n      });\n    } else {\n      console.log(\"main -> handleCardLike -> deleteLike\");\n      Api.deleteLikeCard(cardId).then(newCard => {\n        const newCards = cards.map(c => c.cardId === newCard._id ? {\n          src: newCard.link,\n          nameImg: newCard.name,\n          like: newCard.likes,\n          cardId: newCard._id,\n          ownerId: newCard.owner._id\n        } : c);\n        setCards(newCards);\n      });\n    }\n  } // function handleCardDelete (ownerId, cardId) {\n  //   console.log(\"MAIN!!!!\");\n  //   console.log(ownerId);\n  //   const isOwn = ownerId === currentUser._id;\n  //   if(isOwn) {\n  //     Api.deleteCard(cardId);\n  //   }\n  // }\n\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    Api.getInitialCards().then(res => {\n      setCards(res.map(item => ({\n        src: item.link,\n        nameImg: item.name,\n        like: item.likes,\n        cardId: item._id,\n        ownerId: item.owner._id\n      })));\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: e => handleEditProfileClick(e),\n        onEditAvatar: e => handleEditAvatarClick(e),\n        onAddPlace: e => handleAddPlaceClick(e),\n        onCardClick: handleCardClick,\n        setConfirmOpen: handleConfirmClick,\n        setConfirmAction: setConfirmAction,\n        setConfirmObj: setConfirmObj,\n        onCardDelete: handleCardDelete,\n        onCardLike: handleCardLike,\n        cards: cards,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        setConfirmOpen: handleConfirmClick,\n        setConfirmAction: setConfirmAction,\n        setConfirmObj: setConfirmObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        setConfirmOpen: handleConfirmClick,\n        setConfirmAction: setConfirmAction,\n        setConfirmObj: setConfirmObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        button: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        formId: \"add-card\",\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        setConfirmOpen: handleConfirmClick,\n        confirmAction: () => addNewCard(inputCardName, inputCardLink),\n        setConfirmAction: setConfirmAction,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name-input\",\n            type: \"text\",\n            className: \"popup__input popup__input_type_name\",\n            autoComplete: \"off\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            name: \"name\",\n            value: inputCardName,\n            onChange: e => handleCardName(e),\n            minLength: \"2\",\n            maxLength: \"30\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"name-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"url-input\",\n            type: \"url\",\n            className: \"popup__input popup__input_type_about\",\n            autoComplete: \"off\",\n            placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n            value: inputCardLink,\n            onChange: e => handleCardLink(e),\n            name: \"link\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"url-input-error\",\n            className: \"popup__input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        isOpen: isConfirmOpen,\n        setIsOpen: setConfirmOpen,\n        confirmAction: confirmAction,\n        confirmObj: confirmObj,\n        setСurrentUser: setСurrentUser,\n        cards: cards,\n        setCards: setCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"349CmBALBMlQY1AKugVzIfsz/cQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/App.js"],"names":["React","PopupWithForm","ImagePopup","Confirm","Api","Header","Footer","Main","EditProfilePopup","EditAvatarPopup","CurrentUserContext","App","isEditProfilePopupOpen","setEditProfilePopupState","useState","isEditAvatarPopupOpen","setEditAvatarPopupState","isAddPlacePopupOpen","setAddPlacerPopupState","isImagePopupOpen","setImagePopupState","isConfirmOpen","setConfirmOpen","cards","setCards","isLoading","setIsLoading","selectedCard","setSelectedCard","currentUser","setСurrentUser","inputCardName","setInputCardName","inputCardLink","setInputCardLink","confirmAction","setConfirmAction","confirmObj","setConfirmObj","useEffect","getUserInfo","then","res","catch","err","console","log","closeAllPopups","handleCardClick","src","nameImg","handleConfirmClick","handleEditProfileClick","evt","preventDefault","handleEditAvatarClick","e","handleAddPlaceClick","handleCardName","target","value","handleCardLink","addNewCard","name","link","handleCardLike","like","cardId","isLiked","some","i","_id","likeCard","newCard","newCards","map","c","likes","ownerId","owner","deleteLikeCard","getInitialCards","item","handleCardDelete"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Confirm from './Confirm';\nimport Api from '../utils/Api';\n\nimport Header from './Header'\nimport Footer from './Footer'\nimport Main from './Main'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\n\n\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacerPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n  const [isConfirmOpen, setConfirmOpen] = React.useState(false);\n\n  const [cards, setCards] = React.useState([]); \n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState([]);\n\n  const [currentUser, setСurrentUser] = React.useState([]); \n\n  \n\n\n  const [inputCardName, setInputCardName] = React.useState([]);\n  const [inputCardLink, setInputCardLink] = React.useState([]);\n\n\n  const [confirmAction, setConfirmAction] = React.useState({});\n  const [confirmObj, setConfirmObj] = React.useState({});\n\n\n\n\n  React.useEffect(() => {\n    Api.getUserInfo().then((res) => {\n      setСurrentUser(res);\n    })\n    .catch((err) => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n\n  function closeAllPopups() {\n    setEditProfilePopupState(false);\n    setEditAvatarPopupState(false);\n    setAddPlacerPopupState(false);\n    setImagePopupState(false);\n    setSelectedCard([]);\n  }\n\n  function handleCardClick({src, nameImg}) {\n    setSelectedCard({src, nameImg});\n    setImagePopupState(true);\n  }\n\n  function handleConfirmClick() {\n    setConfirmOpen(true);\n  }\n\n  function handleEditProfileClick (evt) {\n    evt.preventDefault();\n    setEditProfilePopupState(true);\n  }\n\n  function handleEditAvatarClick (e) {\n    e.preventDefault();\n    setEditAvatarPopupState(true);\n  }\n  \n  function handleAddPlaceClick (evt) {\n    evt.preventDefault();\n    setAddPlacerPopupState(true);\n  }\n\n  function handleCardName (evt) {\n    setInputCardName(evt.target.value);\n   }\n\n   function handleCardLink (evt) {\n    setInputCardLink(evt.target.value);\n   }\n\n   function addNewCard (name, link) {\n    setConfirmAction('addNewCard');\n    setConfirmObj({\n      name: name,\n      link: link\n    })\n   }\n\n   function handleCardLike(like, cardId) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = like.some(i => i._id === currentUser._id);\n    console.log('main -> handleCardLike');\n    if(!isLiked) {\n      console.log(\"main -> handleCardLike -> like\")\n      Api.likeCard(cardId)\n      .then((newCard) => {\n          const newCards = cards.map((c) => c.cardId === newCard._id ? ({\n            src: newCard.link,\n            nameImg: newCard.name,\n            like: newCard.likes,\n            cardId: newCard._id,\n            ownerId: newCard.owner._id\n          }) : c);\n        setCards(newCards);\n      })\n    }\n    else {\n      console.log(\"main -> handleCardLike -> deleteLike\")\n      Api.deleteLikeCard(cardId)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c.cardId === newCard._id ? ({\n          src: newCard.link,\n          nameImg: newCard.name,\n          like: newCard.likes,\n          cardId: newCard._id,\n          ownerId: newCard.owner._id\n        }) : c);\n      setCards(newCards);\n    })\n    }\n} \n\n// function handleCardDelete (ownerId, cardId) {\n//   console.log(\"MAIN!!!!\");\n//   console.log(ownerId);\n//   const isOwn = ownerId === currentUser._id;\n//   if(isOwn) {\n//     Api.deleteCard(cardId);\n//   }\n// }\n\nReact.useEffect(() => {\n  setIsLoading(true);\n  Api.getInitialCards()\n  .then((res) => {\n    setCards(res.map((item) => ({\n      src: item.link,\n      nameImg: item.name,\n      like: item.likes,\n      cardId: item._id,\n      ownerId: item.owner._id\n    })));\n    setIsLoading(false);\n  })\n  .catch((err) => {\n    console.log(err); // выведем ошибку в консоль\n  });\n}, [])\n\n \n\n  \n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"App\">\n      <Header />\n      <Main \n        onEditProfile = {(e) => handleEditProfileClick(e)} \n        onEditAvatar = {(e) => handleEditAvatarClick(e)}\n        onAddPlace = {(e) => handleAddPlaceClick(e)}\n        onCardClick = {handleCardClick}\n        setConfirmOpen={handleConfirmClick}\n        setConfirmAction={setConfirmAction}\n        setConfirmObj={setConfirmObj}\n        onCardDelete={handleCardDelete}\n        onCardLike={handleCardLike}\n        cards={cards}\n        isLoading={isLoading}\n        />\n      <Footer />\n\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} setConfirmOpen={handleConfirmClick} setConfirmAction={setConfirmAction} setConfirmObj={setConfirmObj}></EditProfilePopup>\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} setConfirmOpen={handleConfirmClick} setConfirmAction={setConfirmAction} setConfirmObj={setConfirmObj}></EditAvatarPopup>\n\n      \n      \n\n      <PopupWithForm \n        button=\"Создать\" \n        title=\"Новое место\" \n        formId=\"add-card\" \n        isOpen={isAddPlacePopupOpen} \n        onClose={closeAllPopups} \n        setConfirmOpen={handleConfirmClick}\n        confirmAction={() => addNewCard(inputCardName, inputCardLink)}\n        setConfirmAction={setConfirmAction}\n\n        children={<>\n          <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input popup__input_type_name\"\n        autoComplete=\"off\"\n        placeholder=\"Название\"\n        name=\"name\"\n        value={inputCardName}\n        onChange={(e) => handleCardName(e)}\n        minLength=\"2\"\n        maxLength=\"30\"\n        required\n      />\n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input\n        id=\"url-input\"\n        type=\"url\"\n        className=\"popup__input popup__input_type_about\"\n        autoComplete=\"off\"\n        placeholder=\"Ссылка на картинку\"\n        value={inputCardLink}\n        onChange={(e) => handleCardLink(e)}\n        name=\"link\"\n        required\n      />\n      <span id=\"url-input-error\" className=\"popup__input-error\"></span>\n        </>}/>\n\n      <Confirm isOpen={isConfirmOpen} setIsOpen={setConfirmOpen} confirmAction={confirmAction} confirmObj={confirmObj} setСurrentUser={setСurrentUser} cards={cards} setCards={setCards}/>\n      <ImagePopup \n        card={selectedCard} \n        isOpen={isImagePopupOpen}   \n        onClose={closeAllPopups}/>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}