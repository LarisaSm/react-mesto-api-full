{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Api from '../utils/Api';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick\n}) {\n  _s();\n\n  // const [userName, setUserName] = React.useState([]); \n  // const [userDescription, setUserDescription] = React.useState([]); \n  // const [userAvatar, setUserAvatar] = React.useState([]); \n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const currentUser = React.useContext(CurrentUserContext);\n  console.log(currentUser);\n  console.log(\"========main currentUser  ========\"); // React.useEffect(() => {\n  //   Api.getUserInfo().then((res) => {\n  //     setUserName(res.name);\n  //     setUserDescription(res.about);\n  //     setUserAvatar(res.avatar);\n  //   })\n  //   .catch((err) => {\n  //     console.log(err); // выведем ошибку в консоль\n  //   });\n  // }, []);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    Api.getInitialCards().then(res => {\n      setCards(res.map(item => ({\n        src: item.link,\n        nameImg: item.name,\n        like: item.likes,\n        cardId: item._id\n      })));\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main page__main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile main__profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/#\",\n        className: \"profile__avatar-edit\",\n        onClick: onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUser.avatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__name\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__name-title\",\n            children: currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__button profile__button_type_edit\",\n            type: \"button\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__about\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__button profile__button_type_add \",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements main__elements\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this) : cards.map(({\n        cardId,\n        src,\n        nameImg,\n        like\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          src: src,\n          nameImg: nameImg,\n          like: like,\n          cardId: cardId,\n          onCardClick: onCardClick\n        }, cardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 91\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Main, \"2N6sMkTfmuPWbIvzngV/WvAVqHU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/Main.js"],"names":["React","Api","Card","Spinner","CurrentUserContext","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","cards","setCards","useState","isLoading","setIsLoading","currentUser","useContext","console","log","useEffect","getInitialCards","then","res","map","item","src","link","nameImg","name","like","likes","cardId","_id","catch","err","avatar","about"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Api from '../utils/Api';\nimport Card from './Card';\nimport Spinner from './Spinner';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\n\n\nfunction Main ({onEditProfile, onAddPlace, onEditAvatar, onCardClick}) {\n  // const [userName, setUserName] = React.useState([]); \n  // const [userDescription, setUserDescription] = React.useState([]); \n  // const [userAvatar, setUserAvatar] = React.useState([]); \n  const [cards, setCards] = React.useState([]); \n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const currentUser = React.useContext(CurrentUserContext);\n  \n  console.log(currentUser);\n  console.log(\"========main currentUser  ========\");\n\n  // React.useEffect(() => {\n  //   Api.getUserInfo().then((res) => {\n  //     setUserName(res.name);\n  //     setUserDescription(res.about);\n  //     setUserAvatar(res.avatar);\n  //   })\n  //   .catch((err) => {\n  //     console.log(err); // выведем ошибку в консоль\n  //   });\n  // }, []);\n\n\nReact.useEffect(() => {\n  setIsLoading(true);\n  Api.getInitialCards()\n  .then((res) => {\n    setCards(res.map((item) => ({\n      src: item.link,\n      nameImg: item.name,\n      like: item.likes,\n      cardId: item._id\n    })));\n    setIsLoading(false);\n  })\n  .catch((err) => {\n    console.log(err); // выведем ошибку в консоль\n  });\n}, [])\n\n return ( \n <main className=\"main page__main\">\n  <section className=\"profile main__profile\">\n    <a href=\"/#\" className=\"profile__avatar-edit\" onClick={onEditAvatar}>\n      <img\n        src={currentUser.avatar}\n        alt=\"Аватар\"\n        className=\"profile__avatar\"\n      />\n    </a>\n    <div className=\"profile__info\">\n      <div className=\"profile__name\">\n        <p className=\"profile__name-title\">{currentUser.name}</p>\n        <button\n          className=\"profile__button profile__button_type_edit\"\n          type=\"button\"\n          onClick={onEditProfile}\n        ></button>\n      </div>\n      <p className=\"profile__about\">{currentUser.about}</p>\n    </div>\n    <button\n      className=\"profile__button profile__button_type_add \"\n      type=\"button\"\n      onClick={onAddPlace}\n    ></button>\n  </section>\n \n        <section className=\"elements main__elements\">\n     \n        {\n            isLoading ? <Spinner /> : cards.map(({cardId, src, nameImg, like}) => {return <Card key={cardId} src={src} nameImg={nameImg} like={like} cardId={cardId} onCardClick={onCardClick}/>}) \n        }                \n        </section>\n        \n</main>)\n}\n\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}