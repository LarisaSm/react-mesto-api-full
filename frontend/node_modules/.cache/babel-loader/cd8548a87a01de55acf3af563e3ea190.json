{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Api from '../utils/Api';\nimport Card1 from './Card';\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar\n}) {\n  _s();\n\n  const [userName, setUserName] = React.useState([]);\n  const [userDescription, setUserDescription] = React.useState([]);\n  const [userAvatar, setUserAvatar] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Api.getUserInfo().then(res => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n    }).catch(err => {\n      console.log(err); // выведем ошибку в консоль\n    }); // .finally(() => renderLoading (false, spinner, cards));;\n  }, []);\n  React.useEffect(() => {\n    console.log(\"==1==\");\n    Api.getInitialCards().then(res => {\n      console.log(\"==2==\");\n      setCards(res.map(item => ({\n        cardId: item._id,\n        src: item.link,\n        nameImg: item.name,\n        like: item.likes\n      })));\n    }).then(() => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements main__elements\",\n        children: // isLoading\n        //   ? <Spinner /> :\n        cards.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.src,\n            alt: \"\",\n            className: \"element__img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"element__name\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"element__title\",\n              children: item.nameImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"element__likes\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"element__like\",\n                type: \"button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"element__like-counter\",\n                children: item.like\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"element__trash\",\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, \"item._id\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }); // <Card1 key={item.cardId} {...props} />\n    // return (\n    // <section className=\"elements main__elements\">\n    //  {\n    //    console.log(\"==3==\")\n    //         // isLoading\n    //         //   ? <Spinner /> :\n    //           //  cards.map(({ cardId, src, nameImg, like }) => <Card key={cardId} src={src} nameImg={nameImg} like={like} />)\n    //       }\n    // </section>)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main page__main\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile main__profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        className: \"profile__avatar-edit\",\n        onClick: onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__name\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__name-title\",\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__button profile__button_type_edit\",\n            type: \"button\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__about\",\n          children: userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__button profile__button_type_add \",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Main, \"nHsIJQBcs3N20vgJXJKuFpXSoHU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react/src/Components/Main.js"],"names":["React","Api","Card1","Main","onEditProfile","onAddPlace","onEditAvatar","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","then","res","name","about","avatar","catch","err","console","log","getInitialCards","map","item","cardId","_id","src","link","nameImg","like","likes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,QAAlB;;AAIA,SAASC,IAAT,CAAe;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAf,EAA0D;AAAA;;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACS,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AAGAT,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBf,IAAAA,GAAG,CAACgB,WAAJ,GAAkBC,IAAlB,CAAwBC,GAAD,IAAS;AAC9BX,MAAAA,WAAW,CAACW,GAAG,CAACC,IAAL,CAAX;AACAT,MAAAA,kBAAkB,CAACQ,GAAG,CAACE,KAAL,CAAlB;AACAR,MAAAA,aAAa,CAACM,GAAG,CAACG,MAAL,CAAb;AACD,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADc,CACI;AACnB,KAPD,EADoB,CASpB;AAED,GAXD,EAWG,EAXH;AAaAxB,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACFzB,IAAAA,GAAG,CAAC0B,eAAJ,GACGT,IADH,CACSC,GAAD,IAAS;AACbM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAX,MAAAA,QAAQ,CAACI,GAAG,CAACS,GAAJ,CAASC,IAAD,KAAW;AAC1BC,QAAAA,MAAM,EAAED,IAAI,CAACE,GADa;AAE1BC,QAAAA,GAAG,EAAEH,IAAI,CAACI,IAFgB;AAG1BC,QAAAA,OAAO,EAAEL,IAAI,CAACT,IAHY;AAI1Be,QAAAA,IAAI,EAAEN,IAAI,CAACO;AAJe,OAAX,CAAR,CAAD,CAAR;AAMD,KATH,EAUGlB,IAVH,CAUQ,MAAM;AACV,0BACE;AAAS,QAAA,SAAS,EAAC,yBAAnB;AAAA,kBAGQ;AACA;AAEGJ,QAAAA,KAAK,CAACc,GAAN,CAAUC,IAAI,iBACb;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACA;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACG,GAAf;AAAoB,YAAA,GAAG,EAAC,EAAxB;AAA2B,YAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,gBAAd;AAAA,wBAAgCH,IAAI,CAACK;AAArC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACE;AAAQ,gBAAA,SAAS,EAAC,eAAlB;AAAkC,gBAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,gBAAA,SAAS,EAAC,uBAAb;AAAA,0BAAsCL,IAAI,CAACM;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eASA;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA,WAA6B,UAA7B;AAAA;AAAA;AAAA;AAAA,gBADD;AANX;AAAA;AAAA;AAAA;AAAA,cADF;AAwBD,KAnCH,EAFsB,CAyCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGD,GAvDD,EAuDG,EAvDH;AAyDD,sBACA;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA,2BACC;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA,8BACE;AAAG,QAAA,IAAI,EAAC,EAAR;AAAW,QAAA,SAAS,EAAC,sBAArB;AAA4C,QAAA,OAAO,EAAE7B,YAArD;AAAA,+BACE;AACE,UAAA,GAAG,EAAEM,UADP;AAEE,UAAA,GAAG,EAAC,sCAFN;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,sBAAoCL;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,2CADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAEH;AAHX;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA,oBAA+BM;AAA/B;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAmBE;AACE,QAAA,SAAS,EAAC,2CADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEL;AAHX;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADA;AA4BA;;GAzGQF,I;;KAAAA,I;AA4GT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport Api from '../utils/Api';\nimport Card1 from './Card';\n\n\n\nfunction Main ({onEditProfile, onAddPlace, onEditAvatar}) {\n  const [userName, setUserName] = React.useState([]); \n  const [userDescription, setUserDescription] = React.useState([]); \n  const [userAvatar, setUserAvatar] = React.useState([]); \n  const [cards, setCards] = React.useState([]); \n\n  \n  React.useEffect(() => {\n    Api.getUserInfo().then((res) => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n    })\n    .catch((err) => {\n      console.log(err); // выведем ошибку в консоль\n    })\n    // .finally(() => renderLoading (false, spinner, cards));;\n\n  }, []);\n\n  React.useEffect(() => {\n    console.log(\"==1==\");\n  Api.getInitialCards()\n    .then((res) => {\n      console.log(\"==2==\");\n      setCards(res.map((item) => ({\n        cardId: item._id,\n        src: item.link,\n        nameImg: item.name,\n        like: item.likes\n      })))\n    })\n    .then(() => {\n      return (\n        <section className=\"elements main__elements\">\n         {\n\n                // isLoading\n                //   ? <Spinner /> :\n\n                   cards.map(item => (\n                    <div className=\"element\" key=\"item._id\">\n                    <img src={item.src} alt=\"\" className=\"element__img\" />\n                    <div className=\"element__name\">\n                      <h3 className=\"element__title\">{item.nameImg}</h3>\n                      <div className=\"element__likes\">\n                        <button className=\"element__like\" type=\"button\"></button>\n                        <p className=\"element__like-counter\">{item.like}</p>\n                      </div>\n                    </div>\n                    <button className=\"element__trash\" type=\"button\"></button>\n                  </div>\n                   ))\n          }\n    \n        \n        </section>)\n    }\n\n    );\n\n    // <Card1 key={item.cardId} {...props} />\n    // return (\n    // <section className=\"elements main__elements\">\n    //  {\n    //    console.log(\"==3==\")\n    //         // isLoading\n    //         //   ? <Spinner /> :\n    //           //  cards.map(({ cardId, src, nameImg, like }) => <Card key={cardId} src={src} nameImg={nameImg} like={like} />)\n    //       }\n\n    \n    // </section>)\n   \n\n  }, []);\n\n return ( \n <main className=\"main page__main\">\n  <section className=\"profile main__profile\">\n    <a href=\"\" className=\"profile__avatar-edit\" onClick={onEditAvatar}>\n      <img\n        src={userAvatar}\n        alt=\"Аватар\"\n        className=\"profile__avatar\"\n      />\n    </a>\n    <div className=\"profile__info\">\n      <div className=\"profile__name\">\n        <p className=\"profile__name-title\">{userName}</p>\n        <button\n          className=\"profile__button profile__button_type_edit\"\n          type=\"button\"\n          onClick={onEditProfile}\n        ></button>\n      </div>\n      <p className=\"profile__about\">{userDescription}</p>\n    </div>\n    <button\n      className=\"profile__button profile__button_type_add \"\n      type=\"button\"\n      onClick={onAddPlace}\n    ></button>\n  </section>\n</main>)\n}\n\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}