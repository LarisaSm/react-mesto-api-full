{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lara/Documents/\\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/yaPractik/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction InfoTooltip({\n  isOpen,\n  onClose\n}) {\n  _s();\n\n  const text = \"EHF\";\n  const closeByOverlay = useCallback(evt => {\n    if (evt.target !== evt.currentTarget) return;\n    onClose();\n  }, [onClose]);\n  const handleEscClose = useCallback(evt => {\n    if (evt.key === \"Escape\") {\n      onClose();\n    }\n  }, [onClose]);\n  React.useEffect(() => {\n    if (isOpen) {\n      const Popup = document.querySelector(`.${formId}`);\n      document.body.addEventListener(\"keyup\", handleEscClose);\n      Popup.addEventListener(\"click\", closeByOverlay);\n    }\n\n    return () => {\n      const Popup = document.querySelector(`.${formId}`);\n      document.body.removeEventListener(\"keyup\", handleEscClose);\n      Popup.removeEventListener(\"click\", closeByOverlay);\n    };\n  }, [isOpen, formId, closeByOverlay, handleEscClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `infoTooltip ${isOpen && \"popup_opened\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoTooltip__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"infoTooltip__img\",\n        alt: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"infoTooltip__text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"infoTooltip__close\",\n        type: \"button\",\n        onClick: function (evt) {\n          evt.preventDefault();\n          onClose();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoTooltip, \"8VLwKuFHnubxdGPtbwirkmqmqlU=\");\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js"],"names":["React","InfoTooltip","isOpen","onClose","text","closeByOverlay","useCallback","evt","target","currentTarget","handleEscClose","key","useEffect","Popup","document","querySelector","formId","body","addEventListener","removeEventListener","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAArB,EAA0C;AAAA;;AACxC,QAAMC,IAAI,GAAG,KAAb;AACA,QAAMC,cAAc,GAAGC,WAAW,CAC/BC,GAAD,IAAS;AACP,QAAIA,GAAG,CAACC,MAAJ,KAAeD,GAAG,CAACE,aAAvB,EAAsC;AACtCN,IAAAA,OAAO;AACR,GAJ+B,EAKhC,CAACA,OAAD,CALgC,CAAlC;AAQA,QAAMO,cAAc,GAAGJ,WAAW,CAC/BC,GAAD,IAAS;AACP,QAAIA,GAAG,CAACI,GAAJ,KAAY,QAAhB,EAA0B;AACxBR,MAAAA,OAAO;AACR;AACF,GAL+B,EAMhC,CAACA,OAAD,CANgC,CAAlC;AAQAH,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,QAAIV,MAAJ,EAAY;AACV,YAAMW,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAGC,MAAO,EAAlC,CAAd;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCR,cAAxC;AACAG,MAAAA,KAAK,CAACK,gBAAN,CAAuB,OAAvB,EAAgCb,cAAhC;AACD;;AACD,WAAO,MAAM;AACX,YAAMQ,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAGC,MAAO,EAAlC,CAAd;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CT,cAA3C;AACAG,MAAAA,KAAK,CAACM,mBAAN,CAA0B,OAA1B,EAAmCd,cAAnC;AACD,KAJD;AAKD,GAXD,EAWG,CAACH,MAAD,EAASc,MAAT,EAAiBX,cAAjB,EAAiCK,cAAjC,CAXH;AAaA,sBACE;AAAK,IAAA,SAAS,EAAG,eAAcR,MAAM,IAAI,cAAe,EAAxD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,GAAG,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,kBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,UAAUG,GAAV,EAAe;AACtBA,UAAAA,GAAG,CAACa,cAAJ;AACAjB,UAAAA,OAAO;AACR;AANH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/CQF,W;;KAAAA,W;AAiDT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nfunction InfoTooltip({ isOpen, onClose }) {\n  const text = \"EHF\";\n  const closeByOverlay = useCallback(\n    (evt) => {\n      if (evt.target !== evt.currentTarget) return;\n      onClose();\n    },\n    [onClose]\n  );\n\n  const handleEscClose = useCallback(\n    (evt) => {\n      if (evt.key === \"Escape\") {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n  React.useEffect(() => {\n    if (isOpen) {\n      const Popup = document.querySelector(`.${formId}`);\n      document.body.addEventListener(\"keyup\", handleEscClose);\n      Popup.addEventListener(\"click\", closeByOverlay);\n    }\n    return () => {\n      const Popup = document.querySelector(`.${formId}`);\n      document.body.removeEventListener(\"keyup\", handleEscClose);\n      Popup.removeEventListener(\"click\", closeByOverlay);\n    };\n  }, [isOpen, formId, closeByOverlay, handleEscClose]);\n\n  return (\n    <div className={`infoTooltip ${isOpen && \"popup_opened\"}`}>\n      <div className=\"infoTooltip__container\">\n        <img className=\"infoTooltip__img\" alt={text}></img>\n        <h2 className=\"infoTooltip__text\">{text}</h2>\n        <button\n          className=\"infoTooltip__close\"\n          type=\"button\"\n          onClick={function (evt) {\n            evt.preventDefault();\n            onClose();\n          }}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}