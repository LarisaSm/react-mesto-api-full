{"ast":null,"code":"// Auth.js\n// export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const BASE_URL = \"http://localhost:3005\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => returnData(res));\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => returnData(res)).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"jwt\", data.token);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  console.log(\"auth=>getContent\");\n  console.log(token);\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `${token}`\n    }\n  }).then(res => {\n    console.log(\"auth=>getContent=>then\");\n    console.log(res);\n    returnData(res);\n  }).then(data => {\n    console.log(\"auth=>getContent=>then=>then\");\n    console.log(data);\n    return data;\n  });\n};\n\nfunction returnData(res) {\n  if (res.ok) {\n    console.log(\"returnData\");\n    console.log(res.body);\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}","map":{"version":3,"sources":["/Users/lara/Documents/обучение/программирование/yaPractik/mesto-all/frontend/src/utils/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","returnData","authorize","data","token","localStorage","setItem","getContent","console","log","authorization","ok","json","Promise","reject","status"],"mappings":"AAAA;AAEA;AACA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAL2B,GAAvB,CAAL,CASJO,IATI,CASEC,GAAD,IAASC,UAAU,CAACD,GAAD,CATpB,CAAP;AAUD,CAXM;AAaP,OAAO,MAAME,SAAS,GAAG,CAACX,QAAD,EAAWC,KAAX,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAL2B,GAAvB,CAAL,CAUJO,IAVI,CAUEC,GAAD,IAASC,UAAU,CAACD,GAAD,CAVpB,EAWJD,IAXI,CAWEI,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,KAAjC;AACA,aAAOD,IAAP;AACD;AACF,GAhBI,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMI,UAAU,GAAIH,KAAD,IAAW;AACnCI,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAOX,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPe,MAAAA,aAAa,EAAG,GAAEN,KAAM;AAFjB;AAF0B,GAAzB,CAAL,CAOJL,IAPI,CAOEC,GAAD,IAAS;AACbQ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAC,IAAAA,UAAU,CAACD,GAAD,CAAV;AACD,GAXI,EAYJD,IAZI,CAYEI,IAAD,IAAU;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,WAAOA,IAAP;AACC,GAhBE,CAAP;AAiBD,CApBM;;AAsBP,SAASF,UAAT,CAAoBD,GAApB,EAAyB;AACvB,MAAIA,GAAG,CAACW,EAAR,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACJ,IAAhB;AACA,WAAOI,GAAG,CAACY,IAAJ,EAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUd,GAAG,CAACe,MAAO,EAArC,CAAP;AACD","sourcesContent":["// Auth.js\n\n// export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const BASE_URL = \"http://localhost:3005\";\n\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then((res) => returnData(res));\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  })\n    .then((res) => returnData(res))\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      }\n    });\n};\n\nexport const getContent = (token) => {\n  console.log(\"auth=>getContent\");\n  console.log(token);\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `${token}`,\n    },\n  })\n    .then((res) => {\n      console.log(\"auth=>getContent=>then\");\n      console.log(res);\n      returnData(res);\n    })\n    .then((data) => {\n      console.log(\"auth=>getContent=>then=>then\");\n      console.log(data);\n      return data;\n      });\n};\n\nfunction returnData(res) {\n  if (res.ok) {\n    console.log(\"returnData\");\n    console.log(res.body);\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n"]},"metadata":{},"sourceType":"module"}